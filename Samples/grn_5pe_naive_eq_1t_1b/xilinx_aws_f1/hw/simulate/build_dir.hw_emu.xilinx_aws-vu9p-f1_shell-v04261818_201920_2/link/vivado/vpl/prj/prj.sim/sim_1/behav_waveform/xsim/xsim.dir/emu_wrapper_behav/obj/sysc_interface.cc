#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_35(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(5068032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(5068368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(5068424);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(5068816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(5069040);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(5069096);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(5069208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(5069376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(5069432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(5069488);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(5069544);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(5069768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(5069992);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(5070048);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(5070160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(5070328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(5070384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(5070440);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(5070496);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(5070720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(5071168);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(5071224);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(5071392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(5071448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(5071504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(5071672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(5071952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(5072008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(5072064);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(5072120);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(5072616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(5072840);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(5072896);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(5073008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(5073176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(5073232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(5073288);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(5073344);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_AWID.bind(*p_2_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_AWLEN.bind(*p_2_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_AWSIZE.bind(*p_2_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_AWBURST.bind(*p_2_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WLAST.bind(*p_2_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WLAST);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_ARID.bind(*p_2_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->mon_ARLEN.bind(*p_2_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->mon_ARSIZE.bind(*p_2_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_ARBURST.bind(*p_2_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<0, bool > *p_2_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RLAST.bind(*p_2_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_RID.bind(*p_2_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->mon_BID.bind(*p_2_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BID);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tready.bind(*p_2_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_rd_tdata.bind(*p_2_m_axis_rd_tdata);
        p_2_m_axis_rd_tdata->set_sv_netview_offsetfromdp(5075136);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tlast.bind(*p_2_m_axis_rd_tlast);
        p_2_m_axis_rd_tlast->set_sv_netview_offsetfromdp(5075192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tid.bind(*p_2_m_axis_rd_tid);
        p_2_m_axis_rd_tid->set_sv_netview_offsetfromdp(5075248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_rd_tdest.bind(*p_2_m_axis_rd_tdest);
        p_2_m_axis_rd_tdest->set_sv_netview_offsetfromdp(5075304);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tready.bind(*p_2_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_wr_tdata.bind(*p_2_m_axis_wr_tdata);
        p_2_m_axis_wr_tdata->set_sv_netview_offsetfromdp(5075416);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tlast.bind(*p_2_m_axis_wr_tlast);
        p_2_m_axis_wr_tlast->set_sv_netview_offsetfromdp(5075472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tid.bind(*p_2_m_axis_wr_tid);
        p_2_m_axis_wr_tid->set_sv_netview_offsetfromdp(5075528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_wr_tdest.bind(*p_2_m_axis_wr_tdest);
        p_2_m_axis_wr_tdest->set_sv_netview_offsetfromdp(5075584);
        xsim_sc_channel<0, bool > *p_2_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_wr_tvalid.bind(*p_2_m_axis_wr_tvalid);
        p_2_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(5075640);
        xsim_sc_channel<0, bool > *p_2_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_rd_tvalid.bind(*p_2_m_axis_rd_tvalid);
        p_2_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(5075696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr_mon.bind(*p_2_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot_mon.bind(*p_2_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid_mon.bind(*p_2_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready_mon.bind(*p_2_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata_mon.bind(*p_2_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb_mon.bind(*p_2_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid_mon.bind(*p_2_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready_mon.bind(*p_2_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp_mon.bind(*p_2_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid_mon.bind(*p_2_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready_mon.bind(*p_2_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr_mon.bind(*p_2_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot_mon.bind(*p_2_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid_mon.bind(*p_2_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready_mon.bind(*p_2_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata_mon.bind(*p_2_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp_mon.bind(*p_2_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid_mon.bind(*p_2_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready_mon.bind(*p_2_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready_mon);
        sc_inst_3 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_3->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_3_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->aclk.bind(*p_3_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_aclk);
        xsim_sc_channel<0, bool > *p_3_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_3->aclk1.bind(*p_3_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_3_aclk1);
        xsim_sc_channel<0, bool > *p_3_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->aresetn.bind(*p_3_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_awid.bind(*p_3_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S00_AXI_awaddr.bind(*p_3_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S00_AXI_awlen.bind(*p_3_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S00_AXI_awsize.bind(*p_3_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S00_AXI_awburst.bind(*p_3_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_3_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S00_AXI_awlock.bind(*p_3_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S00_AXI_awcache.bind(*p_3_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S00_AXI_awprot.bind(*p_3_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S00_AXI_awqos.bind(*p_3_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_awuser.bind(*p_3_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_awvalid.bind(*p_3_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_awready.bind(*p_3_S00_AXI_awready);
        p_3_S00_AXI_awready->set_sv_netview_offsetfromdp(5481992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S00_AXI_wdata.bind(*p_3_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S00_AXI_wstrb.bind(*p_3_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_wlast.bind(*p_3_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_wuser.bind(*p_3_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_wvalid.bind(*p_3_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_wready.bind(*p_3_S00_AXI_wready);
        p_3_S00_AXI_wready->set_sv_netview_offsetfromdp(5482328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_bid.bind(*p_3_S00_AXI_bid);
        p_3_S00_AXI_bid->set_sv_netview_offsetfromdp(5482384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S00_AXI_bresp.bind(*p_3_S00_AXI_bresp);
        p_3_S00_AXI_bresp->set_sv_netview_offsetfromdp(5482440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_buser.bind(*p_3_S00_AXI_buser);
        p_3_S00_AXI_buser->set_sv_netview_offsetfromdp(5482496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_bvalid.bind(*p_3_S00_AXI_bvalid);
        p_3_S00_AXI_bvalid->set_sv_netview_offsetfromdp(5482552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_bready.bind(*p_3_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_arid.bind(*p_3_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S00_AXI_araddr.bind(*p_3_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S00_AXI_arlen.bind(*p_3_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S00_AXI_arsize.bind(*p_3_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S00_AXI_arburst.bind(*p_3_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_3_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S00_AXI_arlock.bind(*p_3_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S00_AXI_arcache.bind(*p_3_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S00_AXI_arprot.bind(*p_3_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S00_AXI_arqos.bind(*p_3_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_aruser.bind(*p_3_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_arvalid.bind(*p_3_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_arready.bind(*p_3_S00_AXI_arready);
        p_3_S00_AXI_arready->set_sv_netview_offsetfromdp(5483280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_rid.bind(*p_3_S00_AXI_rid);
        p_3_S00_AXI_rid->set_sv_netview_offsetfromdp(5483336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S00_AXI_rdata.bind(*p_3_S00_AXI_rdata);
        p_3_S00_AXI_rdata->set_sv_netview_offsetfromdp(5483392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S00_AXI_rresp.bind(*p_3_S00_AXI_rresp);
        p_3_S00_AXI_rresp->set_sv_netview_offsetfromdp(5483448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_rlast.bind(*p_3_S00_AXI_rlast);
        p_3_S00_AXI_rlast->set_sv_netview_offsetfromdp(5483504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_ruser.bind(*p_3_S00_AXI_ruser);
        p_3_S00_AXI_ruser->set_sv_netview_offsetfromdp(5483560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_rvalid.bind(*p_3_S00_AXI_rvalid);
        p_3_S00_AXI_rvalid->set_sv_netview_offsetfromdp(5483616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S00_AXI_rready.bind(*p_3_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_awid.bind(*p_3_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S01_AXI_awaddr.bind(*p_3_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S01_AXI_awlen.bind(*p_3_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S01_AXI_awsize.bind(*p_3_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S01_AXI_awburst.bind(*p_3_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_3_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S01_AXI_awlock.bind(*p_3_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S01_AXI_awcache.bind(*p_3_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S01_AXI_awprot.bind(*p_3_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S01_AXI_awqos.bind(*p_3_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_awuser.bind(*p_3_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_awvalid.bind(*p_3_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_awready.bind(*p_3_S01_AXI_awready);
        p_3_S01_AXI_awready->set_sv_netview_offsetfromdp(5484344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S01_AXI_wdata.bind(*p_3_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S01_AXI_wstrb.bind(*p_3_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_wlast.bind(*p_3_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_wuser.bind(*p_3_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_wvalid.bind(*p_3_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_wready.bind(*p_3_S01_AXI_wready);
        p_3_S01_AXI_wready->set_sv_netview_offsetfromdp(5484680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_bid.bind(*p_3_S01_AXI_bid);
        p_3_S01_AXI_bid->set_sv_netview_offsetfromdp(5484736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S01_AXI_bresp.bind(*p_3_S01_AXI_bresp);
        p_3_S01_AXI_bresp->set_sv_netview_offsetfromdp(5484792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_buser.bind(*p_3_S01_AXI_buser);
        p_3_S01_AXI_buser->set_sv_netview_offsetfromdp(5484848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_bvalid.bind(*p_3_S01_AXI_bvalid);
        p_3_S01_AXI_bvalid->set_sv_netview_offsetfromdp(5484904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_bready.bind(*p_3_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_arid.bind(*p_3_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S01_AXI_araddr.bind(*p_3_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S01_AXI_arlen.bind(*p_3_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S01_AXI_arsize.bind(*p_3_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S01_AXI_arburst.bind(*p_3_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_3_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S01_AXI_arlock.bind(*p_3_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S01_AXI_arcache.bind(*p_3_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S01_AXI_arprot.bind(*p_3_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S01_AXI_arqos.bind(*p_3_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_aruser.bind(*p_3_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_arvalid.bind(*p_3_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_arready.bind(*p_3_S01_AXI_arready);
        p_3_S01_AXI_arready->set_sv_netview_offsetfromdp(5485632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_rid.bind(*p_3_S01_AXI_rid);
        p_3_S01_AXI_rid->set_sv_netview_offsetfromdp(5485688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S01_AXI_rdata.bind(*p_3_S01_AXI_rdata);
        p_3_S01_AXI_rdata->set_sv_netview_offsetfromdp(5485744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S01_AXI_rresp.bind(*p_3_S01_AXI_rresp);
        p_3_S01_AXI_rresp->set_sv_netview_offsetfromdp(5485800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_rlast.bind(*p_3_S01_AXI_rlast);
        p_3_S01_AXI_rlast->set_sv_netview_offsetfromdp(5485856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_ruser.bind(*p_3_S01_AXI_ruser);
        p_3_S01_AXI_ruser->set_sv_netview_offsetfromdp(5485912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_rvalid.bind(*p_3_S01_AXI_rvalid);
        p_3_S01_AXI_rvalid->set_sv_netview_offsetfromdp(5485968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S01_AXI_rready.bind(*p_3_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_awid.bind(*p_3_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S02_AXI_awaddr.bind(*p_3_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S02_AXI_awlen.bind(*p_3_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S02_AXI_awsize.bind(*p_3_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S02_AXI_awburst.bind(*p_3_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_3_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S02_AXI_awlock.bind(*p_3_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S02_AXI_awcache.bind(*p_3_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S02_AXI_awprot.bind(*p_3_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S02_AXI_awqos.bind(*p_3_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_awuser.bind(*p_3_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_awvalid.bind(*p_3_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_awready.bind(*p_3_S02_AXI_awready);
        p_3_S02_AXI_awready->set_sv_netview_offsetfromdp(5486696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S02_AXI_wdata.bind(*p_3_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S02_AXI_wstrb.bind(*p_3_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_wlast.bind(*p_3_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_wuser.bind(*p_3_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_wvalid.bind(*p_3_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_wready.bind(*p_3_S02_AXI_wready);
        p_3_S02_AXI_wready->set_sv_netview_offsetfromdp(5487032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_bid.bind(*p_3_S02_AXI_bid);
        p_3_S02_AXI_bid->set_sv_netview_offsetfromdp(5487088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S02_AXI_bresp.bind(*p_3_S02_AXI_bresp);
        p_3_S02_AXI_bresp->set_sv_netview_offsetfromdp(5487144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_buser.bind(*p_3_S02_AXI_buser);
        p_3_S02_AXI_buser->set_sv_netview_offsetfromdp(5487200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_bvalid.bind(*p_3_S02_AXI_bvalid);
        p_3_S02_AXI_bvalid->set_sv_netview_offsetfromdp(5487256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_bready.bind(*p_3_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_arid.bind(*p_3_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S02_AXI_araddr.bind(*p_3_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S02_AXI_arlen.bind(*p_3_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S02_AXI_arsize.bind(*p_3_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S02_AXI_arburst.bind(*p_3_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_3_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S02_AXI_arlock.bind(*p_3_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S02_AXI_arcache.bind(*p_3_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S02_AXI_arprot.bind(*p_3_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S02_AXI_arqos.bind(*p_3_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_aruser.bind(*p_3_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_arvalid.bind(*p_3_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_arready.bind(*p_3_S02_AXI_arready);
        p_3_S02_AXI_arready->set_sv_netview_offsetfromdp(5487984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_rid.bind(*p_3_S02_AXI_rid);
        p_3_S02_AXI_rid->set_sv_netview_offsetfromdp(5488040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S02_AXI_rdata.bind(*p_3_S02_AXI_rdata);
        p_3_S02_AXI_rdata->set_sv_netview_offsetfromdp(5488096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S02_AXI_rresp.bind(*p_3_S02_AXI_rresp);
        p_3_S02_AXI_rresp->set_sv_netview_offsetfromdp(5488152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_rlast.bind(*p_3_S02_AXI_rlast);
        p_3_S02_AXI_rlast->set_sv_netview_offsetfromdp(5488208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_ruser.bind(*p_3_S02_AXI_ruser);
        p_3_S02_AXI_ruser->set_sv_netview_offsetfromdp(5488264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_rvalid.bind(*p_3_S02_AXI_rvalid);
        p_3_S02_AXI_rvalid->set_sv_netview_offsetfromdp(5488320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S02_AXI_rready.bind(*p_3_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_awid.bind(*p_3_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S03_AXI_awaddr.bind(*p_3_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S03_AXI_awlen.bind(*p_3_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S03_AXI_awsize.bind(*p_3_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S03_AXI_awburst.bind(*p_3_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_3_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S03_AXI_awlock.bind(*p_3_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S03_AXI_awcache.bind(*p_3_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S03_AXI_awprot.bind(*p_3_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S03_AXI_awqos.bind(*p_3_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_awuser.bind(*p_3_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_awvalid.bind(*p_3_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_awready.bind(*p_3_S03_AXI_awready);
        p_3_S03_AXI_awready->set_sv_netview_offsetfromdp(5489048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S03_AXI_wdata.bind(*p_3_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S03_AXI_wstrb.bind(*p_3_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_wlast.bind(*p_3_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_wuser.bind(*p_3_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_wvalid.bind(*p_3_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_wready.bind(*p_3_S03_AXI_wready);
        p_3_S03_AXI_wready->set_sv_netview_offsetfromdp(5489384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_bid.bind(*p_3_S03_AXI_bid);
        p_3_S03_AXI_bid->set_sv_netview_offsetfromdp(5489440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S03_AXI_bresp.bind(*p_3_S03_AXI_bresp);
        p_3_S03_AXI_bresp->set_sv_netview_offsetfromdp(5489496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_buser.bind(*p_3_S03_AXI_buser);
        p_3_S03_AXI_buser->set_sv_netview_offsetfromdp(5489552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_bvalid.bind(*p_3_S03_AXI_bvalid);
        p_3_S03_AXI_bvalid->set_sv_netview_offsetfromdp(5489608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_bready.bind(*p_3_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_arid.bind(*p_3_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S03_AXI_araddr.bind(*p_3_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S03_AXI_arlen.bind(*p_3_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S03_AXI_arsize.bind(*p_3_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S03_AXI_arburst.bind(*p_3_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_3_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->S03_AXI_arlock.bind(*p_3_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S03_AXI_arcache.bind(*p_3_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S03_AXI_arprot.bind(*p_3_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S03_AXI_arqos.bind(*p_3_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_aruser.bind(*p_3_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_arvalid.bind(*p_3_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_arready.bind(*p_3_S03_AXI_arready);
        p_3_S03_AXI_arready->set_sv_netview_offsetfromdp(5490336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_rid.bind(*p_3_S03_AXI_rid);
        p_3_S03_AXI_rid->set_sv_netview_offsetfromdp(5490392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S03_AXI_rdata.bind(*p_3_S03_AXI_rdata);
        p_3_S03_AXI_rdata->set_sv_netview_offsetfromdp(5490448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->S03_AXI_rresp.bind(*p_3_S03_AXI_rresp);
        p_3_S03_AXI_rresp->set_sv_netview_offsetfromdp(5490504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_rlast.bind(*p_3_S03_AXI_rlast);
        p_3_S03_AXI_rlast->set_sv_netview_offsetfromdp(5490560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_ruser.bind(*p_3_S03_AXI_ruser);
        p_3_S03_AXI_ruser->set_sv_netview_offsetfromdp(5490616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_rvalid.bind(*p_3_S03_AXI_rvalid);
        p_3_S03_AXI_rvalid->set_sv_netview_offsetfromdp(5490672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S03_AXI_rready.bind(*p_3_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S04_AXI_awaddr.bind(*p_3_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S04_AXI_awlen.bind(*p_3_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S04_AXI_awsize.bind(*p_3_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_awsize);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_awvalid.bind(*p_3_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_awready.bind(*p_3_S04_AXI_awready);
        p_3_S04_AXI_awready->set_sv_netview_offsetfromdp(5491008);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S04_AXI_wdata.bind(*p_3_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->S04_AXI_wstrb.bind(*p_3_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_wlast.bind(*p_3_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_wvalid.bind(*p_3_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_wready.bind(*p_3_S04_AXI_wready);
        p_3_S04_AXI_wready->set_sv_netview_offsetfromdp(5491288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_bvalid.bind(*p_3_S04_AXI_bvalid);
        p_3_S04_AXI_bvalid->set_sv_netview_offsetfromdp(5491344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_bready.bind(*p_3_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->S04_AXI_araddr.bind(*p_3_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->S04_AXI_arlen.bind(*p_3_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->S04_AXI_arsize.bind(*p_3_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_arsize);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_arvalid.bind(*p_3_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_arready.bind(*p_3_S04_AXI_arready);
        p_3_S04_AXI_arready->set_sv_netview_offsetfromdp(5491680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->S04_AXI_rdata.bind(*p_3_S04_AXI_rdata);
        p_3_S04_AXI_rdata->set_sv_netview_offsetfromdp(5491736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_rlast.bind(*p_3_S04_AXI_rlast);
        p_3_S04_AXI_rlast->set_sv_netview_offsetfromdp(5491792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_rvalid.bind(*p_3_S04_AXI_rvalid);
        p_3_S04_AXI_rvalid->set_sv_netview_offsetfromdp(5491848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->S04_AXI_rready.bind(*p_3_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_S04_AXI_rready);
        xsim_sc_channel<0, bool > *p_3_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_3->ddr4_mem_calib_complete.bind(*p_3_ddr4_mem_calib_complete);
        p_3_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(5491960);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M00_AXI_awid.bind(*p_3_M00_AXI_awid);
        p_3_M00_AXI_awid->set_sv_netview_offsetfromdp(5492016);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M00_AXI_awaddr.bind(*p_3_M00_AXI_awaddr);
        p_3_M00_AXI_awaddr->set_sv_netview_offsetfromdp(5492072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M00_AXI_awlen.bind(*p_3_M00_AXI_awlen);
        p_3_M00_AXI_awlen->set_sv_netview_offsetfromdp(5492128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M00_AXI_awsize.bind(*p_3_M00_AXI_awsize);
        p_3_M00_AXI_awsize->set_sv_netview_offsetfromdp(5492184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M00_AXI_awburst.bind(*p_3_M00_AXI_awburst);
        p_3_M00_AXI_awburst->set_sv_netview_offsetfromdp(5492240);
        xsim_sc_channel<0, bool > *p_3_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M00_AXI_awlock.bind(*p_3_M00_AXI_awlock);
        p_3_M00_AXI_awlock->set_sv_netview_offsetfromdp(5492296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M00_AXI_awcache.bind(*p_3_M00_AXI_awcache);
        p_3_M00_AXI_awcache->set_sv_netview_offsetfromdp(5492352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M00_AXI_awprot.bind(*p_3_M00_AXI_awprot);
        p_3_M00_AXI_awprot->set_sv_netview_offsetfromdp(5492408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M00_AXI_awqos.bind(*p_3_M00_AXI_awqos);
        p_3_M00_AXI_awqos->set_sv_netview_offsetfromdp(5492464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M00_AXI_awuser.bind(*p_3_M00_AXI_awuser);
        p_3_M00_AXI_awuser->set_sv_netview_offsetfromdp(5492520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_awvalid.bind(*p_3_M00_AXI_awvalid);
        p_3_M00_AXI_awvalid->set_sv_netview_offsetfromdp(5492576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_awready.bind(*p_3_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M00_AXI_wdata.bind(*p_3_M00_AXI_wdata);
        p_3_M00_AXI_wdata->set_sv_netview_offsetfromdp(5492688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->M00_AXI_wstrb.bind(*p_3_M00_AXI_wstrb);
        p_3_M00_AXI_wstrb->set_sv_netview_offsetfromdp(5492744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_wlast.bind(*p_3_M00_AXI_wlast);
        p_3_M00_AXI_wlast->set_sv_netview_offsetfromdp(5492800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_wuser.bind(*p_3_M00_AXI_wuser);
        p_3_M00_AXI_wuser->set_sv_netview_offsetfromdp(5492856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_wvalid.bind(*p_3_M00_AXI_wvalid);
        p_3_M00_AXI_wvalid->set_sv_netview_offsetfromdp(5492912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_wready.bind(*p_3_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M00_AXI_bid.bind(*p_3_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M00_AXI_bresp.bind(*p_3_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_buser.bind(*p_3_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_bvalid.bind(*p_3_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_bready.bind(*p_3_M00_AXI_bready);
        p_3_M00_AXI_bready->set_sv_netview_offsetfromdp(5493248);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M00_AXI_arid.bind(*p_3_M00_AXI_arid);
        p_3_M00_AXI_arid->set_sv_netview_offsetfromdp(5493304);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M00_AXI_araddr.bind(*p_3_M00_AXI_araddr);
        p_3_M00_AXI_araddr->set_sv_netview_offsetfromdp(5493360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M00_AXI_arlen.bind(*p_3_M00_AXI_arlen);
        p_3_M00_AXI_arlen->set_sv_netview_offsetfromdp(5493416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M00_AXI_arsize.bind(*p_3_M00_AXI_arsize);
        p_3_M00_AXI_arsize->set_sv_netview_offsetfromdp(5493472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M00_AXI_arburst.bind(*p_3_M00_AXI_arburst);
        p_3_M00_AXI_arburst->set_sv_netview_offsetfromdp(5493528);
        xsim_sc_channel<0, bool > *p_3_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M00_AXI_arlock.bind(*p_3_M00_AXI_arlock);
        p_3_M00_AXI_arlock->set_sv_netview_offsetfromdp(5493584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M00_AXI_arcache.bind(*p_3_M00_AXI_arcache);
        p_3_M00_AXI_arcache->set_sv_netview_offsetfromdp(5493640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M00_AXI_arprot.bind(*p_3_M00_AXI_arprot);
        p_3_M00_AXI_arprot->set_sv_netview_offsetfromdp(5493696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M00_AXI_arqos.bind(*p_3_M00_AXI_arqos);
        p_3_M00_AXI_arqos->set_sv_netview_offsetfromdp(5493752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M00_AXI_aruser.bind(*p_3_M00_AXI_aruser);
        p_3_M00_AXI_aruser->set_sv_netview_offsetfromdp(5493808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_arvalid.bind(*p_3_M00_AXI_arvalid);
        p_3_M00_AXI_arvalid->set_sv_netview_offsetfromdp(5493864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_arready.bind(*p_3_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M00_AXI_rid.bind(*p_3_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M00_AXI_rdata.bind(*p_3_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M00_AXI_rresp.bind(*p_3_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_rlast.bind(*p_3_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_ruser.bind(*p_3_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_rvalid.bind(*p_3_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M00_AXI_rready.bind(*p_3_M00_AXI_rready);
        p_3_M00_AXI_rready->set_sv_netview_offsetfromdp(5494312);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_3_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_3->M01_AXI_awaddr.bind(*p_3_M01_AXI_awaddr);
        p_3_M01_AXI_awaddr->set_sv_netview_offsetfromdp(5494368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M01_AXI_awlen.bind(*p_3_M01_AXI_awlen);
        p_3_M01_AXI_awlen->set_sv_netview_offsetfromdp(5494424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M01_AXI_awsize.bind(*p_3_M01_AXI_awsize);
        p_3_M01_AXI_awsize->set_sv_netview_offsetfromdp(5494480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M01_AXI_awburst.bind(*p_3_M01_AXI_awburst);
        p_3_M01_AXI_awburst->set_sv_netview_offsetfromdp(5494536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M01_AXI_awprot.bind(*p_3_M01_AXI_awprot);
        p_3_M01_AXI_awprot->set_sv_netview_offsetfromdp(5494592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_awvalid.bind(*p_3_M01_AXI_awvalid);
        p_3_M01_AXI_awvalid->set_sv_netview_offsetfromdp(5494648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_awready.bind(*p_3_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M01_AXI_wdata.bind(*p_3_M01_AXI_wdata);
        p_3_M01_AXI_wdata->set_sv_netview_offsetfromdp(5494760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->M01_AXI_wstrb.bind(*p_3_M01_AXI_wstrb);
        p_3_M01_AXI_wstrb->set_sv_netview_offsetfromdp(5494816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_wlast.bind(*p_3_M01_AXI_wlast);
        p_3_M01_AXI_wlast->set_sv_netview_offsetfromdp(5494872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_wvalid.bind(*p_3_M01_AXI_wvalid);
        p_3_M01_AXI_wvalid->set_sv_netview_offsetfromdp(5494928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_wready.bind(*p_3_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M01_AXI_bresp.bind(*p_3_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_bvalid.bind(*p_3_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_bready.bind(*p_3_M01_AXI_bready);
        p_3_M01_AXI_bready->set_sv_netview_offsetfromdp(5495152);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_3_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_3->M01_AXI_araddr.bind(*p_3_M01_AXI_araddr);
        p_3_M01_AXI_araddr->set_sv_netview_offsetfromdp(5495208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M01_AXI_arlen.bind(*p_3_M01_AXI_arlen);
        p_3_M01_AXI_arlen->set_sv_netview_offsetfromdp(5495264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M01_AXI_arsize.bind(*p_3_M01_AXI_arsize);
        p_3_M01_AXI_arsize->set_sv_netview_offsetfromdp(5495320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M01_AXI_arburst.bind(*p_3_M01_AXI_arburst);
        p_3_M01_AXI_arburst->set_sv_netview_offsetfromdp(5495376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M01_AXI_arprot.bind(*p_3_M01_AXI_arprot);
        p_3_M01_AXI_arprot->set_sv_netview_offsetfromdp(5495432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_arvalid.bind(*p_3_M01_AXI_arvalid);
        p_3_M01_AXI_arvalid->set_sv_netview_offsetfromdp(5495488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_arready.bind(*p_3_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M01_AXI_rdata.bind(*p_3_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M01_AXI_rresp.bind(*p_3_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_rlast.bind(*p_3_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_rvalid.bind(*p_3_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M01_AXI_rready.bind(*p_3_M01_AXI_rready);
        p_3_M01_AXI_rready->set_sv_netview_offsetfromdp(5495824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M02_AXI_awid.bind(*p_3_M02_AXI_awid);
        p_3_M02_AXI_awid->set_sv_netview_offsetfromdp(5495880);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M02_AXI_awaddr.bind(*p_3_M02_AXI_awaddr);
        p_3_M02_AXI_awaddr->set_sv_netview_offsetfromdp(5495936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M02_AXI_awlen.bind(*p_3_M02_AXI_awlen);
        p_3_M02_AXI_awlen->set_sv_netview_offsetfromdp(5495992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M02_AXI_awsize.bind(*p_3_M02_AXI_awsize);
        p_3_M02_AXI_awsize->set_sv_netview_offsetfromdp(5496048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M02_AXI_awburst.bind(*p_3_M02_AXI_awburst);
        p_3_M02_AXI_awburst->set_sv_netview_offsetfromdp(5496104);
        xsim_sc_channel<0, bool > *p_3_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M02_AXI_awlock.bind(*p_3_M02_AXI_awlock);
        p_3_M02_AXI_awlock->set_sv_netview_offsetfromdp(5496160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M02_AXI_awcache.bind(*p_3_M02_AXI_awcache);
        p_3_M02_AXI_awcache->set_sv_netview_offsetfromdp(5496216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M02_AXI_awprot.bind(*p_3_M02_AXI_awprot);
        p_3_M02_AXI_awprot->set_sv_netview_offsetfromdp(5496272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M02_AXI_awqos.bind(*p_3_M02_AXI_awqos);
        p_3_M02_AXI_awqos->set_sv_netview_offsetfromdp(5496328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M02_AXI_awuser.bind(*p_3_M02_AXI_awuser);
        p_3_M02_AXI_awuser->set_sv_netview_offsetfromdp(5496384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_awvalid.bind(*p_3_M02_AXI_awvalid);
        p_3_M02_AXI_awvalid->set_sv_netview_offsetfromdp(5496440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_awready.bind(*p_3_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M02_AXI_wdata.bind(*p_3_M02_AXI_wdata);
        p_3_M02_AXI_wdata->set_sv_netview_offsetfromdp(5496552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->M02_AXI_wstrb.bind(*p_3_M02_AXI_wstrb);
        p_3_M02_AXI_wstrb->set_sv_netview_offsetfromdp(5496608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_wlast.bind(*p_3_M02_AXI_wlast);
        p_3_M02_AXI_wlast->set_sv_netview_offsetfromdp(5496664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_wuser.bind(*p_3_M02_AXI_wuser);
        p_3_M02_AXI_wuser->set_sv_netview_offsetfromdp(5496720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_wvalid.bind(*p_3_M02_AXI_wvalid);
        p_3_M02_AXI_wvalid->set_sv_netview_offsetfromdp(5496776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_wready.bind(*p_3_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M02_AXI_bid.bind(*p_3_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M02_AXI_bresp.bind(*p_3_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_buser.bind(*p_3_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_bvalid.bind(*p_3_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_bready.bind(*p_3_M02_AXI_bready);
        p_3_M02_AXI_bready->set_sv_netview_offsetfromdp(5497112);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M02_AXI_arid.bind(*p_3_M02_AXI_arid);
        p_3_M02_AXI_arid->set_sv_netview_offsetfromdp(5497168);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M02_AXI_araddr.bind(*p_3_M02_AXI_araddr);
        p_3_M02_AXI_araddr->set_sv_netview_offsetfromdp(5497224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M02_AXI_arlen.bind(*p_3_M02_AXI_arlen);
        p_3_M02_AXI_arlen->set_sv_netview_offsetfromdp(5497280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M02_AXI_arsize.bind(*p_3_M02_AXI_arsize);
        p_3_M02_AXI_arsize->set_sv_netview_offsetfromdp(5497336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M02_AXI_arburst.bind(*p_3_M02_AXI_arburst);
        p_3_M02_AXI_arburst->set_sv_netview_offsetfromdp(5497392);
        xsim_sc_channel<0, bool > *p_3_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M02_AXI_arlock.bind(*p_3_M02_AXI_arlock);
        p_3_M02_AXI_arlock->set_sv_netview_offsetfromdp(5497448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M02_AXI_arcache.bind(*p_3_M02_AXI_arcache);
        p_3_M02_AXI_arcache->set_sv_netview_offsetfromdp(5497504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M02_AXI_arprot.bind(*p_3_M02_AXI_arprot);
        p_3_M02_AXI_arprot->set_sv_netview_offsetfromdp(5497560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M02_AXI_arqos.bind(*p_3_M02_AXI_arqos);
        p_3_M02_AXI_arqos->set_sv_netview_offsetfromdp(5497616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M02_AXI_aruser.bind(*p_3_M02_AXI_aruser);
        p_3_M02_AXI_aruser->set_sv_netview_offsetfromdp(5497672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_arvalid.bind(*p_3_M02_AXI_arvalid);
        p_3_M02_AXI_arvalid->set_sv_netview_offsetfromdp(5497728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_arready.bind(*p_3_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M02_AXI_rid.bind(*p_3_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M02_AXI_rdata.bind(*p_3_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M02_AXI_rresp.bind(*p_3_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_rlast.bind(*p_3_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_ruser.bind(*p_3_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_rvalid.bind(*p_3_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M02_AXI_rready.bind(*p_3_M02_AXI_rready);
        p_3_M02_AXI_rready->set_sv_netview_offsetfromdp(5498176);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M03_AXI_awid.bind(*p_3_M03_AXI_awid);
        p_3_M03_AXI_awid->set_sv_netview_offsetfromdp(5498232);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M03_AXI_awaddr.bind(*p_3_M03_AXI_awaddr);
        p_3_M03_AXI_awaddr->set_sv_netview_offsetfromdp(5498288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M03_AXI_awlen.bind(*p_3_M03_AXI_awlen);
        p_3_M03_AXI_awlen->set_sv_netview_offsetfromdp(5498344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M03_AXI_awsize.bind(*p_3_M03_AXI_awsize);
        p_3_M03_AXI_awsize->set_sv_netview_offsetfromdp(5498400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M03_AXI_awburst.bind(*p_3_M03_AXI_awburst);
        p_3_M03_AXI_awburst->set_sv_netview_offsetfromdp(5498456);
        xsim_sc_channel<0, bool > *p_3_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M03_AXI_awlock.bind(*p_3_M03_AXI_awlock);
        p_3_M03_AXI_awlock->set_sv_netview_offsetfromdp(5498512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M03_AXI_awcache.bind(*p_3_M03_AXI_awcache);
        p_3_M03_AXI_awcache->set_sv_netview_offsetfromdp(5498568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M03_AXI_awprot.bind(*p_3_M03_AXI_awprot);
        p_3_M03_AXI_awprot->set_sv_netview_offsetfromdp(5498624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M03_AXI_awqos.bind(*p_3_M03_AXI_awqos);
        p_3_M03_AXI_awqos->set_sv_netview_offsetfromdp(5498680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M03_AXI_awuser.bind(*p_3_M03_AXI_awuser);
        p_3_M03_AXI_awuser->set_sv_netview_offsetfromdp(5498736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_awvalid.bind(*p_3_M03_AXI_awvalid);
        p_3_M03_AXI_awvalid->set_sv_netview_offsetfromdp(5498792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_awready.bind(*p_3_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M03_AXI_wdata.bind(*p_3_M03_AXI_wdata);
        p_3_M03_AXI_wdata->set_sv_netview_offsetfromdp(5498904);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->M03_AXI_wstrb.bind(*p_3_M03_AXI_wstrb);
        p_3_M03_AXI_wstrb->set_sv_netview_offsetfromdp(5498960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_wlast.bind(*p_3_M03_AXI_wlast);
        p_3_M03_AXI_wlast->set_sv_netview_offsetfromdp(5499016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_wuser.bind(*p_3_M03_AXI_wuser);
        p_3_M03_AXI_wuser->set_sv_netview_offsetfromdp(5499072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_wvalid.bind(*p_3_M03_AXI_wvalid);
        p_3_M03_AXI_wvalid->set_sv_netview_offsetfromdp(5499128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_wready.bind(*p_3_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M03_AXI_bid.bind(*p_3_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M03_AXI_bresp.bind(*p_3_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_buser.bind(*p_3_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_bvalid.bind(*p_3_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_bready.bind(*p_3_M03_AXI_bready);
        p_3_M03_AXI_bready->set_sv_netview_offsetfromdp(5499464);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M03_AXI_arid.bind(*p_3_M03_AXI_arid);
        p_3_M03_AXI_arid->set_sv_netview_offsetfromdp(5499520);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_3_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_3->M03_AXI_araddr.bind(*p_3_M03_AXI_araddr);
        p_3_M03_AXI_araddr->set_sv_netview_offsetfromdp(5499576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->M03_AXI_arlen.bind(*p_3_M03_AXI_arlen);
        p_3_M03_AXI_arlen->set_sv_netview_offsetfromdp(5499632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M03_AXI_arsize.bind(*p_3_M03_AXI_arsize);
        p_3_M03_AXI_arsize->set_sv_netview_offsetfromdp(5499688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M03_AXI_arburst.bind(*p_3_M03_AXI_arburst);
        p_3_M03_AXI_arburst->set_sv_netview_offsetfromdp(5499744);
        xsim_sc_channel<0, bool > *p_3_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_3->M03_AXI_arlock.bind(*p_3_M03_AXI_arlock);
        p_3_M03_AXI_arlock->set_sv_netview_offsetfromdp(5499800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M03_AXI_arcache.bind(*p_3_M03_AXI_arcache);
        p_3_M03_AXI_arcache->set_sv_netview_offsetfromdp(5499856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->M03_AXI_arprot.bind(*p_3_M03_AXI_arprot);
        p_3_M03_AXI_arprot->set_sv_netview_offsetfromdp(5499912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->M03_AXI_arqos.bind(*p_3_M03_AXI_arqos);
        p_3_M03_AXI_arqos->set_sv_netview_offsetfromdp(5499968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->M03_AXI_aruser.bind(*p_3_M03_AXI_aruser);
        p_3_M03_AXI_aruser->set_sv_netview_offsetfromdp(5500024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_arvalid.bind(*p_3_M03_AXI_arvalid);
        p_3_M03_AXI_arvalid->set_sv_netview_offsetfromdp(5500080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_arready.bind(*p_3_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_3_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_3->M03_AXI_rid.bind(*p_3_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->M03_AXI_rdata.bind(*p_3_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->M03_AXI_rresp.bind(*p_3_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_rlast.bind(*p_3_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_ruser.bind(*p_3_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_rvalid.bind(*p_3_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->M03_AXI_rready.bind(*p_3_M03_AXI_rready);
        p_3_M03_AXI_rready->set_sv_netview_offsetfromdp(5500528);
        sc_inst_4 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_4->xsim_set_dbg_index(31);
        sc_inst_5 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_5->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_5_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ui_clk.bind(*p_5_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->c0_ddr_saxi_awid.bind(*p_5_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->c0_ddr_saxi_awaddr.bind(*p_5_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->c0_ddr_saxi_awlen.bind(*p_5_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->c0_ddr_saxi_awsize.bind(*p_5_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->c0_ddr_saxi_awburst.bind(*p_5_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_awlock.bind(*p_5_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_awcache.bind(*p_5_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->c0_ddr_saxi_awprot.bind(*p_5_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_awregion.bind(*p_5_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_awqos.bind(*p_5_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->c0_ddr_saxi_awuser.bind(*p_5_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_awvalid.bind(*p_5_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_awready.bind(*p_5_c0_ddr_saxi_awready);
        p_5_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5501408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->c0_ddr_saxi_wdata.bind(*p_5_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->c0_ddr_saxi_wstrb.bind(*p_5_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_wlast.bind(*p_5_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->c0_ddr_saxi_wuser.bind(*p_5_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_wvalid.bind(*p_5_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_wready.bind(*p_5_c0_ddr_saxi_wready);
        p_5_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5501744);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->c0_ddr_saxi_bid.bind(*p_5_c0_ddr_saxi_bid);
        p_5_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5501800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->c0_ddr_saxi_bresp.bind(*p_5_c0_ddr_saxi_bresp);
        p_5_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5501856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->c0_ddr_saxi_buser.bind(*p_5_c0_ddr_saxi_buser);
        p_5_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5501912);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_bvalid.bind(*p_5_c0_ddr_saxi_bvalid);
        p_5_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5501968);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_bready.bind(*p_5_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->c0_ddr_saxi_arid.bind(*p_5_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->c0_ddr_saxi_araddr.bind(*p_5_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->c0_ddr_saxi_arlen.bind(*p_5_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->c0_ddr_saxi_arsize.bind(*p_5_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->c0_ddr_saxi_arburst.bind(*p_5_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_arlock.bind(*p_5_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_arcache.bind(*p_5_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->c0_ddr_saxi_arprot.bind(*p_5_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_arregion.bind(*p_5_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->c0_ddr_saxi_arqos.bind(*p_5_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->c0_ddr_saxi_aruser.bind(*p_5_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_arvalid.bind(*p_5_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_arready.bind(*p_5_c0_ddr_saxi_arready);
        p_5_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5502752);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->c0_ddr_saxi_rid.bind(*p_5_c0_ddr_saxi_rid);
        p_5_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5502808);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->c0_ddr_saxi_rdata.bind(*p_5_c0_ddr_saxi_rdata);
        p_5_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5502864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->c0_ddr_saxi_rresp.bind(*p_5_c0_ddr_saxi_rresp);
        p_5_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5502920);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_rlast.bind(*p_5_c0_ddr_saxi_rlast);
        p_5_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5502976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->c0_ddr_saxi_ruser.bind(*p_5_c0_ddr_saxi_ruser);
        p_5_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5503032);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_rvalid.bind(*p_5_c0_ddr_saxi_rvalid);
        p_5_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5503088);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_rready.bind(*p_5_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_aclk.bind(*p_5_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_5_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->c0_ddr_saxi_aresetn.bind(*p_5_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->s_xdma_axi_awid.bind(*p_5_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_awaddr.bind(*p_5_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_xdma_axi_awlen.bind(*p_5_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_xdma_axi_awsize.bind(*p_5_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_xdma_axi_awburst.bind(*p_5_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_awlock.bind(*p_5_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_awcache.bind(*p_5_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_xdma_axi_awprot.bind(*p_5_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_awregion.bind(*p_5_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_awqos.bind(*p_5_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_awuser.bind(*p_5_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_awvalid.bind(*p_5_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_awready.bind(*p_5_s_xdma_axi_awready);
        p_5_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5503984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_wdata.bind(*p_5_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_wstrb.bind(*p_5_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_wlast.bind(*p_5_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->s_xdma_axi_wuser.bind(*p_5_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_wvalid.bind(*p_5_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_wready.bind(*p_5_s_xdma_axi_wready);
        p_5_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5504320);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->s_xdma_axi_bid.bind(*p_5_s_xdma_axi_bid);
        p_5_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5504376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_xdma_axi_bresp.bind(*p_5_s_xdma_axi_bresp);
        p_5_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5504432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->s_xdma_axi_buser.bind(*p_5_s_xdma_axi_buser);
        p_5_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5504488);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_bvalid.bind(*p_5_s_xdma_axi_bvalid);
        p_5_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5504544);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_bready.bind(*p_5_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->s_xdma_axi_arid.bind(*p_5_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_araddr.bind(*p_5_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_xdma_axi_arlen.bind(*p_5_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_xdma_axi_arsize.bind(*p_5_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_xdma_axi_arburst.bind(*p_5_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_arlock.bind(*p_5_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_arcache.bind(*p_5_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_xdma_axi_arprot.bind(*p_5_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_arregion.bind(*p_5_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_xdma_axi_arqos.bind(*p_5_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_aruser.bind(*p_5_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_arvalid.bind(*p_5_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_arready.bind(*p_5_s_xdma_axi_arready);
        p_5_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5505328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->s_xdma_axi_rid.bind(*p_5_s_xdma_axi_rid);
        p_5_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5505384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_xdma_axi_rdata.bind(*p_5_s_xdma_axi_rdata);
        p_5_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5505440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_xdma_axi_rresp.bind(*p_5_s_xdma_axi_rresp);
        p_5_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5505496);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_rlast.bind(*p_5_s_xdma_axi_rlast);
        p_5_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5505552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->s_xdma_axi_ruser.bind(*p_5_s_xdma_axi_ruser);
        p_5_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5505608);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_rvalid.bind(*p_5_s_xdma_axi_rvalid);
        p_5_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5505664);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_rready.bind(*p_5_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_aclk.bind(*p_5_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_xdma_axi_aresetn.bind(*p_5_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_xdma_axi_aresetn);
        sc_inst_6 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_6->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_6_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ui_clk.bind(*p_6_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_awid.bind(*p_6_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_awaddr.bind(*p_6_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_awlen.bind(*p_6_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awsize.bind(*p_6_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_awburst.bind(*p_6_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awlock.bind(*p_6_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awcache.bind(*p_6_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awprot.bind(*p_6_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awregion.bind(*p_6_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awqos.bind(*p_6_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_awuser.bind(*p_6_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awvalid.bind(*p_6_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awready.bind(*p_6_c0_ddr_saxi_awready);
        p_6_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5506664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_wdata.bind(*p_6_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->c0_ddr_saxi_wstrb.bind(*p_6_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wlast.bind(*p_6_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_wuser.bind(*p_6_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wvalid.bind(*p_6_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wready.bind(*p_6_c0_ddr_saxi_wready);
        p_6_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5507000);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_bid.bind(*p_6_c0_ddr_saxi_bid);
        p_6_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5507056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_bresp.bind(*p_6_c0_ddr_saxi_bresp);
        p_6_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5507112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_buser.bind(*p_6_c0_ddr_saxi_buser);
        p_6_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5507168);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bvalid.bind(*p_6_c0_ddr_saxi_bvalid);
        p_6_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5507224);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bready.bind(*p_6_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_arid.bind(*p_6_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_araddr.bind(*p_6_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_arlen.bind(*p_6_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arsize.bind(*p_6_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_arburst.bind(*p_6_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arlock.bind(*p_6_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arcache.bind(*p_6_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arprot.bind(*p_6_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arregion.bind(*p_6_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arqos.bind(*p_6_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_aruser.bind(*p_6_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arvalid.bind(*p_6_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arready.bind(*p_6_c0_ddr_saxi_arready);
        p_6_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5508008);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_rid.bind(*p_6_c0_ddr_saxi_rid);
        p_6_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5508064);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_rdata.bind(*p_6_c0_ddr_saxi_rdata);
        p_6_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5508120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_rresp.bind(*p_6_c0_ddr_saxi_rresp);
        p_6_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5508176);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rlast.bind(*p_6_c0_ddr_saxi_rlast);
        p_6_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5508232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_ruser.bind(*p_6_c0_ddr_saxi_ruser);
        p_6_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5508288);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rvalid.bind(*p_6_c0_ddr_saxi_rvalid);
        p_6_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5508344);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rready.bind(*p_6_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aclk.bind(*p_6_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aresetn.bind(*p_6_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_awid.bind(*p_6_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awaddr.bind(*p_6_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_awlen.bind(*p_6_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awsize.bind(*p_6_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_awburst.bind(*p_6_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awlock.bind(*p_6_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awcache.bind(*p_6_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awprot.bind(*p_6_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awregion.bind(*p_6_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awqos.bind(*p_6_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awuser.bind(*p_6_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awvalid.bind(*p_6_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awready.bind(*p_6_s_xdma_axi_awready);
        p_6_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5509240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_wdata.bind(*p_6_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_wstrb.bind(*p_6_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wlast.bind(*p_6_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_wuser.bind(*p_6_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wvalid.bind(*p_6_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wready.bind(*p_6_s_xdma_axi_wready);
        p_6_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5509576);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_bid.bind(*p_6_s_xdma_axi_bid);
        p_6_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5509632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_bresp.bind(*p_6_s_xdma_axi_bresp);
        p_6_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5509688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_buser.bind(*p_6_s_xdma_axi_buser);
        p_6_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5509744);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bvalid.bind(*p_6_s_xdma_axi_bvalid);
        p_6_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5509800);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bready.bind(*p_6_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_arid.bind(*p_6_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_araddr.bind(*p_6_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_arlen.bind(*p_6_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arsize.bind(*p_6_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_arburst.bind(*p_6_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arlock.bind(*p_6_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arcache.bind(*p_6_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arprot.bind(*p_6_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arregion.bind(*p_6_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arqos.bind(*p_6_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_aruser.bind(*p_6_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arvalid.bind(*p_6_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arready.bind(*p_6_s_xdma_axi_arready);
        p_6_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5510584);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_rid.bind(*p_6_s_xdma_axi_rid);
        p_6_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5510640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_rdata.bind(*p_6_s_xdma_axi_rdata);
        p_6_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5510696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_rresp.bind(*p_6_s_xdma_axi_rresp);
        p_6_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5510752);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rlast.bind(*p_6_s_xdma_axi_rlast);
        p_6_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5510808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_ruser.bind(*p_6_s_xdma_axi_ruser);
        p_6_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5510864);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rvalid.bind(*p_6_s_xdma_axi_rvalid);
        p_6_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5510920);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rready.bind(*p_6_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aclk.bind(*p_6_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aresetn.bind(*p_6_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aresetn);
        sc_inst_7 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_7->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5511920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5512256);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5512312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5512368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5512424);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5512480);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5513264);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5513320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5513376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5513432);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5513488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5513544);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5513600);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5514496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5514832);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5514888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5514944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5515000);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5515056);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5515840);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5515896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5515952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5516008);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5516064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5516120);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5516176);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_8->xsim_set_dbg_index(638);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_awid.bind(*p_8_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->s00_axi_awaddr.bind(*p_8_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_awlen.bind(*p_8_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awsize.bind(*p_8_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_awburst.bind(*p_8_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awlock.bind(*p_8_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awcache.bind(*p_8_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_awprot.bind(*p_8_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awregion.bind(*p_8_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_awqos.bind(*p_8_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_awuser.bind(*p_8_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awvalid.bind(*p_8_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_awready.bind(*p_8_s00_axi_awready);
        p_8_s00_axi_awready->set_sv_netview_offsetfromdp(5587584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_wdata.bind(*p_8_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_wstrb.bind(*p_8_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wlast.bind(*p_8_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_wuser.bind(*p_8_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wvalid.bind(*p_8_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_wready.bind(*p_8_s00_axi_wready);
        p_8_s00_axi_wready->set_sv_netview_offsetfromdp(5587920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_bid.bind(*p_8_s00_axi_bid);
        p_8_s00_axi_bid->set_sv_netview_offsetfromdp(5587976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_bresp.bind(*p_8_s00_axi_bresp);
        p_8_s00_axi_bresp->set_sv_netview_offsetfromdp(5588032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_buser.bind(*p_8_s00_axi_buser);
        p_8_s00_axi_buser->set_sv_netview_offsetfromdp(5588088);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bvalid.bind(*p_8_s00_axi_bvalid);
        p_8_s00_axi_bvalid->set_sv_netview_offsetfromdp(5588144);
        xsim_sc_channel<0, bool > *p_8_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_bready.bind(*p_8_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_arid.bind(*p_8_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_8_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_8->s00_axi_araddr.bind(*p_8_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s00_axi_arlen.bind(*p_8_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arsize.bind(*p_8_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_arburst.bind(*p_8_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arlock.bind(*p_8_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arcache.bind(*p_8_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s00_axi_arprot.bind(*p_8_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arregion.bind(*p_8_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s00_axi_arqos.bind(*p_8_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_aruser.bind(*p_8_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arvalid.bind(*p_8_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_arready.bind(*p_8_s00_axi_arready);
        p_8_s00_axi_arready->set_sv_netview_offsetfromdp(5588928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_rid.bind(*p_8_s00_axi_rid);
        p_8_s00_axi_rid->set_sv_netview_offsetfromdp(5588984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s00_axi_rdata.bind(*p_8_s00_axi_rdata);
        p_8_s00_axi_rdata->set_sv_netview_offsetfromdp(5589040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s00_axi_rresp.bind(*p_8_s00_axi_rresp);
        p_8_s00_axi_rresp->set_sv_netview_offsetfromdp(5589096);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rlast.bind(*p_8_s00_axi_rlast);
        p_8_s00_axi_rlast->set_sv_netview_offsetfromdp(5589152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s00_axi_ruser.bind(*p_8_s00_axi_ruser);
        p_8_s00_axi_ruser->set_sv_netview_offsetfromdp(5589208);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rvalid.bind(*p_8_s00_axi_rvalid);
        p_8_s00_axi_rvalid->set_sv_netview_offsetfromdp(5589264);
        xsim_sc_channel<0, bool > *p_8_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_rready.bind(*p_8_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aclk.bind(*p_8_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s00_axi_aresetn.bind(*p_8_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awid.bind(*p_8_m00_axi_awid);
        p_8_m00_axi_awid->set_sv_netview_offsetfromdp(5589488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_awaddr.bind(*p_8_m00_axi_awaddr);
        p_8_m00_axi_awaddr->set_sv_netview_offsetfromdp(5589544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_awlen.bind(*p_8_m00_axi_awlen);
        p_8_m00_axi_awlen->set_sv_netview_offsetfromdp(5589600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awsize.bind(*p_8_m00_axi_awsize);
        p_8_m00_axi_awsize->set_sv_netview_offsetfromdp(5589656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_awburst.bind(*p_8_m00_axi_awburst);
        p_8_m00_axi_awburst->set_sv_netview_offsetfromdp(5589712);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awlock.bind(*p_8_m00_axi_awlock);
        p_8_m00_axi_awlock->set_sv_netview_offsetfromdp(5589768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awcache.bind(*p_8_m00_axi_awcache);
        p_8_m00_axi_awcache->set_sv_netview_offsetfromdp(5589824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_awprot.bind(*p_8_m00_axi_awprot);
        p_8_m00_axi_awprot->set_sv_netview_offsetfromdp(5589880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_awqos.bind(*p_8_m00_axi_awqos);
        p_8_m00_axi_awqos->set_sv_netview_offsetfromdp(5589936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_awuser.bind(*p_8_m00_axi_awuser);
        p_8_m00_axi_awuser->set_sv_netview_offsetfromdp(5589992);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awvalid.bind(*p_8_m00_axi_awvalid);
        p_8_m00_axi_awvalid->set_sv_netview_offsetfromdp(5590048);
        xsim_sc_channel<0, bool > *p_8_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_awready.bind(*p_8_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_wdata.bind(*p_8_m00_axi_wdata);
        p_8_m00_axi_wdata->set_sv_netview_offsetfromdp(5590160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_wstrb.bind(*p_8_m00_axi_wstrb);
        p_8_m00_axi_wstrb->set_sv_netview_offsetfromdp(5590216);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wlast.bind(*p_8_m00_axi_wlast);
        p_8_m00_axi_wlast->set_sv_netview_offsetfromdp(5590272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_wuser.bind(*p_8_m00_axi_wuser);
        p_8_m00_axi_wuser->set_sv_netview_offsetfromdp(5590328);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wvalid.bind(*p_8_m00_axi_wvalid);
        p_8_m00_axi_wvalid->set_sv_netview_offsetfromdp(5590384);
        xsim_sc_channel<0, bool > *p_8_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_wready.bind(*p_8_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_bid.bind(*p_8_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_bresp.bind(*p_8_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_buser.bind(*p_8_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bvalid.bind(*p_8_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_bready.bind(*p_8_m00_axi_bready);
        p_8_m00_axi_bready->set_sv_netview_offsetfromdp(5590720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_arid.bind(*p_8_m00_axi_arid);
        p_8_m00_axi_arid->set_sv_netview_offsetfromdp(5590776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->m00_axi_araddr.bind(*p_8_m00_axi_araddr);
        p_8_m00_axi_araddr->set_sv_netview_offsetfromdp(5590832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m00_axi_arlen.bind(*p_8_m00_axi_arlen);
        p_8_m00_axi_arlen->set_sv_netview_offsetfromdp(5590888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arsize.bind(*p_8_m00_axi_arsize);
        p_8_m00_axi_arsize->set_sv_netview_offsetfromdp(5590944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_arburst.bind(*p_8_m00_axi_arburst);
        p_8_m00_axi_arburst->set_sv_netview_offsetfromdp(5591000);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arlock.bind(*p_8_m00_axi_arlock);
        p_8_m00_axi_arlock->set_sv_netview_offsetfromdp(5591056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arcache.bind(*p_8_m00_axi_arcache);
        p_8_m00_axi_arcache->set_sv_netview_offsetfromdp(5591112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m00_axi_arprot.bind(*p_8_m00_axi_arprot);
        p_8_m00_axi_arprot->set_sv_netview_offsetfromdp(5591168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m00_axi_arqos.bind(*p_8_m00_axi_arqos);
        p_8_m00_axi_arqos->set_sv_netview_offsetfromdp(5591224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_aruser.bind(*p_8_m00_axi_aruser);
        p_8_m00_axi_aruser->set_sv_netview_offsetfromdp(5591280);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arvalid.bind(*p_8_m00_axi_arvalid);
        p_8_m00_axi_arvalid->set_sv_netview_offsetfromdp(5591336);
        xsim_sc_channel<0, bool > *p_8_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_arready.bind(*p_8_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_rid.bind(*p_8_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m00_axi_rdata.bind(*p_8_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m00_axi_rresp.bind(*p_8_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rlast.bind(*p_8_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->m00_axi_ruser.bind(*p_8_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rvalid.bind(*p_8_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_rready.bind(*p_8_m00_axi_rready);
        p_8_m00_axi_rready->set_sv_netview_offsetfromdp(5591784);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aclk.bind(*p_8_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->m00_axi_aresetn.bind(*p_8_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m00_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_9->xsim_set_dbg_index(792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awid.bind(*p_9_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_awaddr.bind(*p_9_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_awlen.bind(*p_9_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awsize.bind(*p_9_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_awburst.bind(*p_9_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awlock.bind(*p_9_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awcache.bind(*p_9_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awprot.bind(*p_9_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awregion.bind(*p_9_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awqos.bind(*p_9_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awuser.bind(*p_9_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awvalid.bind(*p_9_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awready.bind(*p_9_s00_axi_awready);
        p_9_s00_axi_awready->set_sv_netview_offsetfromdp(6137352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_wdata.bind(*p_9_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_wstrb.bind(*p_9_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wlast.bind(*p_9_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_wuser.bind(*p_9_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wvalid.bind(*p_9_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wready.bind(*p_9_s00_axi_wready);
        p_9_s00_axi_wready->set_sv_netview_offsetfromdp(6137688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_bid.bind(*p_9_s00_axi_bid);
        p_9_s00_axi_bid->set_sv_netview_offsetfromdp(6137744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_bresp.bind(*p_9_s00_axi_bresp);
        p_9_s00_axi_bresp->set_sv_netview_offsetfromdp(6137800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_buser.bind(*p_9_s00_axi_buser);
        p_9_s00_axi_buser->set_sv_netview_offsetfromdp(6137856);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bvalid.bind(*p_9_s00_axi_bvalid);
        p_9_s00_axi_bvalid->set_sv_netview_offsetfromdp(6137912);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bready.bind(*p_9_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_arid.bind(*p_9_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_araddr.bind(*p_9_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_arlen.bind(*p_9_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arsize.bind(*p_9_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_arburst.bind(*p_9_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arlock.bind(*p_9_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arcache.bind(*p_9_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arprot.bind(*p_9_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arregion.bind(*p_9_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arqos.bind(*p_9_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_aruser.bind(*p_9_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arvalid.bind(*p_9_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arready.bind(*p_9_s00_axi_arready);
        p_9_s00_axi_arready->set_sv_netview_offsetfromdp(6138696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_rid.bind(*p_9_s00_axi_rid);
        p_9_s00_axi_rid->set_sv_netview_offsetfromdp(6138752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_rdata.bind(*p_9_s00_axi_rdata);
        p_9_s00_axi_rdata->set_sv_netview_offsetfromdp(6138808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_rresp.bind(*p_9_s00_axi_rresp);
        p_9_s00_axi_rresp->set_sv_netview_offsetfromdp(6138864);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rlast.bind(*p_9_s00_axi_rlast);
        p_9_s00_axi_rlast->set_sv_netview_offsetfromdp(6138920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_ruser.bind(*p_9_s00_axi_ruser);
        p_9_s00_axi_ruser->set_sv_netview_offsetfromdp(6138976);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rvalid.bind(*p_9_s00_axi_rvalid);
        p_9_s00_axi_rvalid->set_sv_netview_offsetfromdp(6139032);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rready.bind(*p_9_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aclk.bind(*p_9_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aresetn.bind(*p_9_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awid.bind(*p_9_m00_axi_awid);
        p_9_m00_axi_awid->set_sv_netview_offsetfromdp(6139256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_awaddr.bind(*p_9_m00_axi_awaddr);
        p_9_m00_axi_awaddr->set_sv_netview_offsetfromdp(6139312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_awlen.bind(*p_9_m00_axi_awlen);
        p_9_m00_axi_awlen->set_sv_netview_offsetfromdp(6139368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awsize.bind(*p_9_m00_axi_awsize);
        p_9_m00_axi_awsize->set_sv_netview_offsetfromdp(6139424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_awburst.bind(*p_9_m00_axi_awburst);
        p_9_m00_axi_awburst->set_sv_netview_offsetfromdp(6139480);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awlock.bind(*p_9_m00_axi_awlock);
        p_9_m00_axi_awlock->set_sv_netview_offsetfromdp(6139536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awcache.bind(*p_9_m00_axi_awcache);
        p_9_m00_axi_awcache->set_sv_netview_offsetfromdp(6139592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awprot.bind(*p_9_m00_axi_awprot);
        p_9_m00_axi_awprot->set_sv_netview_offsetfromdp(6139648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awqos.bind(*p_9_m00_axi_awqos);
        p_9_m00_axi_awqos->set_sv_netview_offsetfromdp(6139704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awuser.bind(*p_9_m00_axi_awuser);
        p_9_m00_axi_awuser->set_sv_netview_offsetfromdp(6139760);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awvalid.bind(*p_9_m00_axi_awvalid);
        p_9_m00_axi_awvalid->set_sv_netview_offsetfromdp(6139816);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awready.bind(*p_9_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_wdata.bind(*p_9_m00_axi_wdata);
        p_9_m00_axi_wdata->set_sv_netview_offsetfromdp(6139928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_wstrb.bind(*p_9_m00_axi_wstrb);
        p_9_m00_axi_wstrb->set_sv_netview_offsetfromdp(6139984);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wlast.bind(*p_9_m00_axi_wlast);
        p_9_m00_axi_wlast->set_sv_netview_offsetfromdp(6140040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_wuser.bind(*p_9_m00_axi_wuser);
        p_9_m00_axi_wuser->set_sv_netview_offsetfromdp(6140096);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wvalid.bind(*p_9_m00_axi_wvalid);
        p_9_m00_axi_wvalid->set_sv_netview_offsetfromdp(6140152);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wready.bind(*p_9_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_bid.bind(*p_9_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_bresp.bind(*p_9_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_buser.bind(*p_9_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bvalid.bind(*p_9_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bready.bind(*p_9_m00_axi_bready);
        p_9_m00_axi_bready->set_sv_netview_offsetfromdp(6140488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_arid.bind(*p_9_m00_axi_arid);
        p_9_m00_axi_arid->set_sv_netview_offsetfromdp(6140544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_araddr.bind(*p_9_m00_axi_araddr);
        p_9_m00_axi_araddr->set_sv_netview_offsetfromdp(6140600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_arlen.bind(*p_9_m00_axi_arlen);
        p_9_m00_axi_arlen->set_sv_netview_offsetfromdp(6140656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arsize.bind(*p_9_m00_axi_arsize);
        p_9_m00_axi_arsize->set_sv_netview_offsetfromdp(6140712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_arburst.bind(*p_9_m00_axi_arburst);
        p_9_m00_axi_arburst->set_sv_netview_offsetfromdp(6140768);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arlock.bind(*p_9_m00_axi_arlock);
        p_9_m00_axi_arlock->set_sv_netview_offsetfromdp(6140824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arcache.bind(*p_9_m00_axi_arcache);
        p_9_m00_axi_arcache->set_sv_netview_offsetfromdp(6140880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arprot.bind(*p_9_m00_axi_arprot);
        p_9_m00_axi_arprot->set_sv_netview_offsetfromdp(6140936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arqos.bind(*p_9_m00_axi_arqos);
        p_9_m00_axi_arqos->set_sv_netview_offsetfromdp(6140992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_aruser.bind(*p_9_m00_axi_aruser);
        p_9_m00_axi_aruser->set_sv_netview_offsetfromdp(6141048);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arvalid.bind(*p_9_m00_axi_arvalid);
        p_9_m00_axi_arvalid->set_sv_netview_offsetfromdp(6141104);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arready.bind(*p_9_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_rid.bind(*p_9_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_rdata.bind(*p_9_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_rresp.bind(*p_9_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rlast.bind(*p_9_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_ruser.bind(*p_9_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rvalid.bind(*p_9_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rready.bind(*p_9_m00_axi_rready);
        p_9_m00_axi_rready->set_sv_netview_offsetfromdp(6141552);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aclk.bind(*p_9_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aresetn.bind(*p_9_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_10->xsim_set_dbg_index(793);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(6142440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(6142776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(6142832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(6142888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(6142944);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(6143000);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(6143784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(6143840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(6143896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(6143952);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(6144008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(6144064);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(6144120);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(6144344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(6144400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(6144456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(6144512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(6144568);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(6144624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(6144680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(6144736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(6144792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(6144848);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(6144904);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(6145016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(6145072);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(6145128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(6145184);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(6145240);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(6145576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(6145632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(6145688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(6145744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(6145800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(6145856);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(6145912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(6145968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(6146024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(6146080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(6146136);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(6146192);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(6146640);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_11->xsim_set_dbg_index(991);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(6720600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(6720936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(6720992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(6721048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(6721104);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(6721160);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(6721944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(6722000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(6722056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(6722112);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(6722168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(6722224);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(6722280);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(6722504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(6722560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(6722616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(6722672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(6722728);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(6722784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(6722840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(6722896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(6722952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(6723008);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(6723064);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(6723176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(6723232);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(6723288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(6723344);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(6723400);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(6723736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(6723792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(6723848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(6723904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(6723960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(6724016);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(6724072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(6724128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(6724184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(6724240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(6724296);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(6724352);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(6724800);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_12->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(7454712);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(7454992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(7455048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(7455104);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(7455160);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(7455888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(7455944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(7456000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(7456056);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(7456112);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(7456168);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(7456392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(7456448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(7456504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(7456560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(7456616);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(7456672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(7456728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(7456784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(7456840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(7456896);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(7456952);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(7457064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(7457120);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(7457176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(7457232);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(7457288);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(7457624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(7457680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(7457736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(7457792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(7457848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(7457904);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(7457960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(7458016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(7458072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(7458128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(7458184);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(7458240);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(7458688);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_awid.bind(*p_12_m02_axi_awid);
        p_12_m02_axi_awid->set_sv_netview_offsetfromdp(7458856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m02_axi_awaddr.bind(*p_12_m02_axi_awaddr);
        p_12_m02_axi_awaddr->set_sv_netview_offsetfromdp(7458912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m02_axi_awlen.bind(*p_12_m02_axi_awlen);
        p_12_m02_axi_awlen->set_sv_netview_offsetfromdp(7458968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m02_axi_awsize.bind(*p_12_m02_axi_awsize);
        p_12_m02_axi_awsize->set_sv_netview_offsetfromdp(7459024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m02_axi_awburst.bind(*p_12_m02_axi_awburst);
        p_12_m02_axi_awburst->set_sv_netview_offsetfromdp(7459080);
        xsim_sc_channel<0, bool > *p_12_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_awlock.bind(*p_12_m02_axi_awlock);
        p_12_m02_axi_awlock->set_sv_netview_offsetfromdp(7459136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m02_axi_awcache.bind(*p_12_m02_axi_awcache);
        p_12_m02_axi_awcache->set_sv_netview_offsetfromdp(7459192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m02_axi_awprot.bind(*p_12_m02_axi_awprot);
        p_12_m02_axi_awprot->set_sv_netview_offsetfromdp(7459248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m02_axi_awqos.bind(*p_12_m02_axi_awqos);
        p_12_m02_axi_awqos->set_sv_netview_offsetfromdp(7459304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_awuser.bind(*p_12_m02_axi_awuser);
        p_12_m02_axi_awuser->set_sv_netview_offsetfromdp(7459360);
        xsim_sc_channel<0, bool > *p_12_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_awvalid.bind(*p_12_m02_axi_awvalid);
        p_12_m02_axi_awvalid->set_sv_netview_offsetfromdp(7459416);
        xsim_sc_channel<0, bool > *p_12_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_awready.bind(*p_12_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m02_axi_wdata.bind(*p_12_m02_axi_wdata);
        p_12_m02_axi_wdata->set_sv_netview_offsetfromdp(7459528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m02_axi_wstrb.bind(*p_12_m02_axi_wstrb);
        p_12_m02_axi_wstrb->set_sv_netview_offsetfromdp(7459584);
        xsim_sc_channel<0, bool > *p_12_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_wlast.bind(*p_12_m02_axi_wlast);
        p_12_m02_axi_wlast->set_sv_netview_offsetfromdp(7459640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_wuser.bind(*p_12_m02_axi_wuser);
        p_12_m02_axi_wuser->set_sv_netview_offsetfromdp(7459696);
        xsim_sc_channel<0, bool > *p_12_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_wvalid.bind(*p_12_m02_axi_wvalid);
        p_12_m02_axi_wvalid->set_sv_netview_offsetfromdp(7459752);
        xsim_sc_channel<0, bool > *p_12_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_wready.bind(*p_12_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_bid.bind(*p_12_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m02_axi_bresp.bind(*p_12_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_buser.bind(*p_12_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_bvalid.bind(*p_12_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_bready.bind(*p_12_m02_axi_bready);
        p_12_m02_axi_bready->set_sv_netview_offsetfromdp(7460088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_arid.bind(*p_12_m02_axi_arid);
        p_12_m02_axi_arid->set_sv_netview_offsetfromdp(7460144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m02_axi_araddr.bind(*p_12_m02_axi_araddr);
        p_12_m02_axi_araddr->set_sv_netview_offsetfromdp(7460200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m02_axi_arlen.bind(*p_12_m02_axi_arlen);
        p_12_m02_axi_arlen->set_sv_netview_offsetfromdp(7460256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m02_axi_arsize.bind(*p_12_m02_axi_arsize);
        p_12_m02_axi_arsize->set_sv_netview_offsetfromdp(7460312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m02_axi_arburst.bind(*p_12_m02_axi_arburst);
        p_12_m02_axi_arburst->set_sv_netview_offsetfromdp(7460368);
        xsim_sc_channel<0, bool > *p_12_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_arlock.bind(*p_12_m02_axi_arlock);
        p_12_m02_axi_arlock->set_sv_netview_offsetfromdp(7460424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m02_axi_arcache.bind(*p_12_m02_axi_arcache);
        p_12_m02_axi_arcache->set_sv_netview_offsetfromdp(7460480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m02_axi_arprot.bind(*p_12_m02_axi_arprot);
        p_12_m02_axi_arprot->set_sv_netview_offsetfromdp(7460536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m02_axi_arqos.bind(*p_12_m02_axi_arqos);
        p_12_m02_axi_arqos->set_sv_netview_offsetfromdp(7460592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_aruser.bind(*p_12_m02_axi_aruser);
        p_12_m02_axi_aruser->set_sv_netview_offsetfromdp(7460648);
        xsim_sc_channel<0, bool > *p_12_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_arvalid.bind(*p_12_m02_axi_arvalid);
        p_12_m02_axi_arvalid->set_sv_netview_offsetfromdp(7460704);
        xsim_sc_channel<0, bool > *p_12_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_arready.bind(*p_12_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_rid.bind(*p_12_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m02_axi_rdata.bind(*p_12_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m02_axi_rresp.bind(*p_12_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_rlast.bind(*p_12_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m02_axi_ruser.bind(*p_12_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_rvalid.bind(*p_12_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_rready.bind(*p_12_m02_axi_rready);
        p_12_m02_axi_rready->set_sv_netview_offsetfromdp(7461152);
        xsim_sc_channel<0, bool > *p_12_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_aclk.bind(*p_12_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m02_axi_aresetn.bind(*p_12_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_awid.bind(*p_12_m03_axi_awid);
        p_12_m03_axi_awid->set_sv_netview_offsetfromdp(7461320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m03_axi_awaddr.bind(*p_12_m03_axi_awaddr);
        p_12_m03_axi_awaddr->set_sv_netview_offsetfromdp(7461376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m03_axi_awlen.bind(*p_12_m03_axi_awlen);
        p_12_m03_axi_awlen->set_sv_netview_offsetfromdp(7461432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m03_axi_awsize.bind(*p_12_m03_axi_awsize);
        p_12_m03_axi_awsize->set_sv_netview_offsetfromdp(7461488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m03_axi_awburst.bind(*p_12_m03_axi_awburst);
        p_12_m03_axi_awburst->set_sv_netview_offsetfromdp(7461544);
        xsim_sc_channel<0, bool > *p_12_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_awlock.bind(*p_12_m03_axi_awlock);
        p_12_m03_axi_awlock->set_sv_netview_offsetfromdp(7461600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m03_axi_awcache.bind(*p_12_m03_axi_awcache);
        p_12_m03_axi_awcache->set_sv_netview_offsetfromdp(7461656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m03_axi_awprot.bind(*p_12_m03_axi_awprot);
        p_12_m03_axi_awprot->set_sv_netview_offsetfromdp(7461712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m03_axi_awqos.bind(*p_12_m03_axi_awqos);
        p_12_m03_axi_awqos->set_sv_netview_offsetfromdp(7461768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_awuser.bind(*p_12_m03_axi_awuser);
        p_12_m03_axi_awuser->set_sv_netview_offsetfromdp(7461824);
        xsim_sc_channel<0, bool > *p_12_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_awvalid.bind(*p_12_m03_axi_awvalid);
        p_12_m03_axi_awvalid->set_sv_netview_offsetfromdp(7461880);
        xsim_sc_channel<0, bool > *p_12_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_awready.bind(*p_12_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m03_axi_wdata.bind(*p_12_m03_axi_wdata);
        p_12_m03_axi_wdata->set_sv_netview_offsetfromdp(7461992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m03_axi_wstrb.bind(*p_12_m03_axi_wstrb);
        p_12_m03_axi_wstrb->set_sv_netview_offsetfromdp(7462048);
        xsim_sc_channel<0, bool > *p_12_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_wlast.bind(*p_12_m03_axi_wlast);
        p_12_m03_axi_wlast->set_sv_netview_offsetfromdp(7462104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_wuser.bind(*p_12_m03_axi_wuser);
        p_12_m03_axi_wuser->set_sv_netview_offsetfromdp(7462160);
        xsim_sc_channel<0, bool > *p_12_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_wvalid.bind(*p_12_m03_axi_wvalid);
        p_12_m03_axi_wvalid->set_sv_netview_offsetfromdp(7462216);
        xsim_sc_channel<0, bool > *p_12_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_wready.bind(*p_12_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_bid.bind(*p_12_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m03_axi_bresp.bind(*p_12_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_buser.bind(*p_12_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_bvalid.bind(*p_12_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_bready.bind(*p_12_m03_axi_bready);
        p_12_m03_axi_bready->set_sv_netview_offsetfromdp(7462552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_arid.bind(*p_12_m03_axi_arid);
        p_12_m03_axi_arid->set_sv_netview_offsetfromdp(7462608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m03_axi_araddr.bind(*p_12_m03_axi_araddr);
        p_12_m03_axi_araddr->set_sv_netview_offsetfromdp(7462664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m03_axi_arlen.bind(*p_12_m03_axi_arlen);
        p_12_m03_axi_arlen->set_sv_netview_offsetfromdp(7462720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m03_axi_arsize.bind(*p_12_m03_axi_arsize);
        p_12_m03_axi_arsize->set_sv_netview_offsetfromdp(7462776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m03_axi_arburst.bind(*p_12_m03_axi_arburst);
        p_12_m03_axi_arburst->set_sv_netview_offsetfromdp(7462832);
        xsim_sc_channel<0, bool > *p_12_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_arlock.bind(*p_12_m03_axi_arlock);
        p_12_m03_axi_arlock->set_sv_netview_offsetfromdp(7462888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m03_axi_arcache.bind(*p_12_m03_axi_arcache);
        p_12_m03_axi_arcache->set_sv_netview_offsetfromdp(7462944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m03_axi_arprot.bind(*p_12_m03_axi_arprot);
        p_12_m03_axi_arprot->set_sv_netview_offsetfromdp(7463000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m03_axi_arqos.bind(*p_12_m03_axi_arqos);
        p_12_m03_axi_arqos->set_sv_netview_offsetfromdp(7463056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_aruser.bind(*p_12_m03_axi_aruser);
        p_12_m03_axi_aruser->set_sv_netview_offsetfromdp(7463112);
        xsim_sc_channel<0, bool > *p_12_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_arvalid.bind(*p_12_m03_axi_arvalid);
        p_12_m03_axi_arvalid->set_sv_netview_offsetfromdp(7463168);
        xsim_sc_channel<0, bool > *p_12_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_arready.bind(*p_12_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_rid.bind(*p_12_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m03_axi_rdata.bind(*p_12_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m03_axi_rresp.bind(*p_12_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_rlast.bind(*p_12_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m03_axi_ruser.bind(*p_12_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_rvalid.bind(*p_12_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_rready.bind(*p_12_m03_axi_rready);
        p_12_m03_axi_rready->set_sv_netview_offsetfromdp(7463616);
        xsim_sc_channel<0, bool > *p_12_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_aclk.bind(*p_12_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m03_axi_aresetn.bind(*p_12_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_awid.bind(*p_12_m04_axi_awid);
        p_12_m04_axi_awid->set_sv_netview_offsetfromdp(7463784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m04_axi_awaddr.bind(*p_12_m04_axi_awaddr);
        p_12_m04_axi_awaddr->set_sv_netview_offsetfromdp(7463840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m04_axi_awlen.bind(*p_12_m04_axi_awlen);
        p_12_m04_axi_awlen->set_sv_netview_offsetfromdp(7463896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m04_axi_awsize.bind(*p_12_m04_axi_awsize);
        p_12_m04_axi_awsize->set_sv_netview_offsetfromdp(7463952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m04_axi_awburst.bind(*p_12_m04_axi_awburst);
        p_12_m04_axi_awburst->set_sv_netview_offsetfromdp(7464008);
        xsim_sc_channel<0, bool > *p_12_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_awlock.bind(*p_12_m04_axi_awlock);
        p_12_m04_axi_awlock->set_sv_netview_offsetfromdp(7464064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m04_axi_awcache.bind(*p_12_m04_axi_awcache);
        p_12_m04_axi_awcache->set_sv_netview_offsetfromdp(7464120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m04_axi_awprot.bind(*p_12_m04_axi_awprot);
        p_12_m04_axi_awprot->set_sv_netview_offsetfromdp(7464176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m04_axi_awqos.bind(*p_12_m04_axi_awqos);
        p_12_m04_axi_awqos->set_sv_netview_offsetfromdp(7464232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_awuser.bind(*p_12_m04_axi_awuser);
        p_12_m04_axi_awuser->set_sv_netview_offsetfromdp(7464288);
        xsim_sc_channel<0, bool > *p_12_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_awvalid.bind(*p_12_m04_axi_awvalid);
        p_12_m04_axi_awvalid->set_sv_netview_offsetfromdp(7464344);
        xsim_sc_channel<0, bool > *p_12_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_awready.bind(*p_12_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m04_axi_wdata.bind(*p_12_m04_axi_wdata);
        p_12_m04_axi_wdata->set_sv_netview_offsetfromdp(7464456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m04_axi_wstrb.bind(*p_12_m04_axi_wstrb);
        p_12_m04_axi_wstrb->set_sv_netview_offsetfromdp(7464512);
        xsim_sc_channel<0, bool > *p_12_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_wlast.bind(*p_12_m04_axi_wlast);
        p_12_m04_axi_wlast->set_sv_netview_offsetfromdp(7464568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_wuser.bind(*p_12_m04_axi_wuser);
        p_12_m04_axi_wuser->set_sv_netview_offsetfromdp(7464624);
        xsim_sc_channel<0, bool > *p_12_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_wvalid.bind(*p_12_m04_axi_wvalid);
        p_12_m04_axi_wvalid->set_sv_netview_offsetfromdp(7464680);
        xsim_sc_channel<0, bool > *p_12_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_wready.bind(*p_12_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_bid.bind(*p_12_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m04_axi_bresp.bind(*p_12_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_buser.bind(*p_12_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_bvalid.bind(*p_12_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_bready.bind(*p_12_m04_axi_bready);
        p_12_m04_axi_bready->set_sv_netview_offsetfromdp(7465016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_arid.bind(*p_12_m04_axi_arid);
        p_12_m04_axi_arid->set_sv_netview_offsetfromdp(7465072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m04_axi_araddr.bind(*p_12_m04_axi_araddr);
        p_12_m04_axi_araddr->set_sv_netview_offsetfromdp(7465128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m04_axi_arlen.bind(*p_12_m04_axi_arlen);
        p_12_m04_axi_arlen->set_sv_netview_offsetfromdp(7465184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m04_axi_arsize.bind(*p_12_m04_axi_arsize);
        p_12_m04_axi_arsize->set_sv_netview_offsetfromdp(7465240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m04_axi_arburst.bind(*p_12_m04_axi_arburst);
        p_12_m04_axi_arburst->set_sv_netview_offsetfromdp(7465296);
        xsim_sc_channel<0, bool > *p_12_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_arlock.bind(*p_12_m04_axi_arlock);
        p_12_m04_axi_arlock->set_sv_netview_offsetfromdp(7465352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m04_axi_arcache.bind(*p_12_m04_axi_arcache);
        p_12_m04_axi_arcache->set_sv_netview_offsetfromdp(7465408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m04_axi_arprot.bind(*p_12_m04_axi_arprot);
        p_12_m04_axi_arprot->set_sv_netview_offsetfromdp(7465464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m04_axi_arqos.bind(*p_12_m04_axi_arqos);
        p_12_m04_axi_arqos->set_sv_netview_offsetfromdp(7465520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_aruser.bind(*p_12_m04_axi_aruser);
        p_12_m04_axi_aruser->set_sv_netview_offsetfromdp(7465576);
        xsim_sc_channel<0, bool > *p_12_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_arvalid.bind(*p_12_m04_axi_arvalid);
        p_12_m04_axi_arvalid->set_sv_netview_offsetfromdp(7465632);
        xsim_sc_channel<0, bool > *p_12_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_arready.bind(*p_12_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_rid.bind(*p_12_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m04_axi_rdata.bind(*p_12_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m04_axi_rresp.bind(*p_12_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_rlast.bind(*p_12_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m04_axi_ruser.bind(*p_12_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_rvalid.bind(*p_12_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_rready.bind(*p_12_m04_axi_rready);
        p_12_m04_axi_rready->set_sv_netview_offsetfromdp(7466080);
        xsim_sc_channel<0, bool > *p_12_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_aclk.bind(*p_12_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m04_axi_aresetn.bind(*p_12_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_awid.bind(*p_12_m01_axi_awid);
        p_12_m01_axi_awid->set_sv_netview_offsetfromdp(7466248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m01_axi_awaddr.bind(*p_12_m01_axi_awaddr);
        p_12_m01_axi_awaddr->set_sv_netview_offsetfromdp(7466304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m01_axi_awlen.bind(*p_12_m01_axi_awlen);
        p_12_m01_axi_awlen->set_sv_netview_offsetfromdp(7466360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m01_axi_awsize.bind(*p_12_m01_axi_awsize);
        p_12_m01_axi_awsize->set_sv_netview_offsetfromdp(7466416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m01_axi_awburst.bind(*p_12_m01_axi_awburst);
        p_12_m01_axi_awburst->set_sv_netview_offsetfromdp(7466472);
        xsim_sc_channel<0, bool > *p_12_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_awlock.bind(*p_12_m01_axi_awlock);
        p_12_m01_axi_awlock->set_sv_netview_offsetfromdp(7466528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m01_axi_awcache.bind(*p_12_m01_axi_awcache);
        p_12_m01_axi_awcache->set_sv_netview_offsetfromdp(7466584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m01_axi_awprot.bind(*p_12_m01_axi_awprot);
        p_12_m01_axi_awprot->set_sv_netview_offsetfromdp(7466640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m01_axi_awqos.bind(*p_12_m01_axi_awqos);
        p_12_m01_axi_awqos->set_sv_netview_offsetfromdp(7466696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_awuser.bind(*p_12_m01_axi_awuser);
        p_12_m01_axi_awuser->set_sv_netview_offsetfromdp(7466752);
        xsim_sc_channel<0, bool > *p_12_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_awvalid.bind(*p_12_m01_axi_awvalid);
        p_12_m01_axi_awvalid->set_sv_netview_offsetfromdp(7466808);
        xsim_sc_channel<0, bool > *p_12_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_awready.bind(*p_12_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m01_axi_wdata.bind(*p_12_m01_axi_wdata);
        p_12_m01_axi_wdata->set_sv_netview_offsetfromdp(7466920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m01_axi_wstrb.bind(*p_12_m01_axi_wstrb);
        p_12_m01_axi_wstrb->set_sv_netview_offsetfromdp(7466976);
        xsim_sc_channel<0, bool > *p_12_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_wlast.bind(*p_12_m01_axi_wlast);
        p_12_m01_axi_wlast->set_sv_netview_offsetfromdp(7467032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_wuser.bind(*p_12_m01_axi_wuser);
        p_12_m01_axi_wuser->set_sv_netview_offsetfromdp(7467088);
        xsim_sc_channel<0, bool > *p_12_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_wvalid.bind(*p_12_m01_axi_wvalid);
        p_12_m01_axi_wvalid->set_sv_netview_offsetfromdp(7467144);
        xsim_sc_channel<0, bool > *p_12_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_wready.bind(*p_12_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_bid.bind(*p_12_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m01_axi_bresp.bind(*p_12_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_buser.bind(*p_12_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_bvalid.bind(*p_12_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_bready.bind(*p_12_m01_axi_bready);
        p_12_m01_axi_bready->set_sv_netview_offsetfromdp(7467480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_arid.bind(*p_12_m01_axi_arid);
        p_12_m01_axi_arid->set_sv_netview_offsetfromdp(7467536);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m01_axi_araddr.bind(*p_12_m01_axi_araddr);
        p_12_m01_axi_araddr->set_sv_netview_offsetfromdp(7467592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m01_axi_arlen.bind(*p_12_m01_axi_arlen);
        p_12_m01_axi_arlen->set_sv_netview_offsetfromdp(7467648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m01_axi_arsize.bind(*p_12_m01_axi_arsize);
        p_12_m01_axi_arsize->set_sv_netview_offsetfromdp(7467704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m01_axi_arburst.bind(*p_12_m01_axi_arburst);
        p_12_m01_axi_arburst->set_sv_netview_offsetfromdp(7467760);
        xsim_sc_channel<0, bool > *p_12_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_arlock.bind(*p_12_m01_axi_arlock);
        p_12_m01_axi_arlock->set_sv_netview_offsetfromdp(7467816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m01_axi_arcache.bind(*p_12_m01_axi_arcache);
        p_12_m01_axi_arcache->set_sv_netview_offsetfromdp(7467872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m01_axi_arprot.bind(*p_12_m01_axi_arprot);
        p_12_m01_axi_arprot->set_sv_netview_offsetfromdp(7467928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m01_axi_arqos.bind(*p_12_m01_axi_arqos);
        p_12_m01_axi_arqos->set_sv_netview_offsetfromdp(7467984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_aruser.bind(*p_12_m01_axi_aruser);
        p_12_m01_axi_aruser->set_sv_netview_offsetfromdp(7468040);
        xsim_sc_channel<0, bool > *p_12_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_arvalid.bind(*p_12_m01_axi_arvalid);
        p_12_m01_axi_arvalid->set_sv_netview_offsetfromdp(7468096);
        xsim_sc_channel<0, bool > *p_12_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_arready.bind(*p_12_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_rid.bind(*p_12_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m01_axi_rdata.bind(*p_12_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m01_axi_rresp.bind(*p_12_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_rlast.bind(*p_12_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m01_axi_ruser.bind(*p_12_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_rvalid.bind(*p_12_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_rready.bind(*p_12_m01_axi_rready);
        p_12_m01_axi_rready->set_sv_netview_offsetfromdp(7468544);
        xsim_sc_channel<0, bool > *p_12_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_aclk.bind(*p_12_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m01_axi_aresetn.bind(*p_12_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s03_axi_awid.bind(*p_12_s03_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s03_axi_awaddr.bind(*p_12_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s03_axi_awlen.bind(*p_12_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s03_axi_awsize.bind(*p_12_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s03_axi_awburst.bind(*p_12_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_awlock.bind(*p_12_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_awcache.bind(*p_12_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s03_axi_awprot.bind(*p_12_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_awregion.bind(*p_12_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_awqos.bind(*p_12_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_12_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_awvalid.bind(*p_12_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_awready.bind(*p_12_s03_axi_awready);
        p_12_s03_axi_awready->set_sv_netview_offsetfromdp(7469328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s03_axi_wdata.bind(*p_12_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s03_axi_wstrb.bind(*p_12_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_wlast.bind(*p_12_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_wvalid.bind(*p_12_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_wready.bind(*p_12_s03_axi_wready);
        p_12_s03_axi_wready->set_sv_netview_offsetfromdp(7469608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s03_axi_bid.bind(*p_12_s03_axi_bid);
        p_12_s03_axi_bid->set_sv_netview_offsetfromdp(7469664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s03_axi_bresp.bind(*p_12_s03_axi_bresp);
        p_12_s03_axi_bresp->set_sv_netview_offsetfromdp(7469720);
        xsim_sc_channel<0, bool > *p_12_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_bvalid.bind(*p_12_s03_axi_bvalid);
        p_12_s03_axi_bvalid->set_sv_netview_offsetfromdp(7469776);
        xsim_sc_channel<0, bool > *p_12_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_bready.bind(*p_12_s03_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s03_axi_arid.bind(*p_12_s03_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s03_axi_araddr.bind(*p_12_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s03_axi_arlen.bind(*p_12_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s03_axi_arsize.bind(*p_12_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s03_axi_arburst.bind(*p_12_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_arlock.bind(*p_12_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_arcache.bind(*p_12_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s03_axi_arprot.bind(*p_12_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_arregion.bind(*p_12_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s03_axi_arqos.bind(*p_12_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_12_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_arvalid.bind(*p_12_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_arready.bind(*p_12_s03_axi_arready);
        p_12_s03_axi_arready->set_sv_netview_offsetfromdp(7470504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s03_axi_rid.bind(*p_12_s03_axi_rid);
        p_12_s03_axi_rid->set_sv_netview_offsetfromdp(7470560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s03_axi_rdata.bind(*p_12_s03_axi_rdata);
        p_12_s03_axi_rdata->set_sv_netview_offsetfromdp(7470616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s03_axi_rresp.bind(*p_12_s03_axi_rresp);
        p_12_s03_axi_rresp->set_sv_netview_offsetfromdp(7470672);
        xsim_sc_channel<0, bool > *p_12_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_rlast.bind(*p_12_s03_axi_rlast);
        p_12_s03_axi_rlast->set_sv_netview_offsetfromdp(7470728);
        xsim_sc_channel<0, bool > *p_12_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_rvalid.bind(*p_12_s03_axi_rvalid);
        p_12_s03_axi_rvalid->set_sv_netview_offsetfromdp(7470784);
        xsim_sc_channel<0, bool > *p_12_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_rready.bind(*p_12_s03_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_aclk.bind(*p_12_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s03_axi_aresetn.bind(*p_12_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s01_axi_awid.bind(*p_12_s01_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s01_axi_awaddr.bind(*p_12_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s01_axi_awlen.bind(*p_12_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s01_axi_awsize.bind(*p_12_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s01_axi_awburst.bind(*p_12_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_awlock.bind(*p_12_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_awcache.bind(*p_12_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s01_axi_awprot.bind(*p_12_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_awregion.bind(*p_12_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_awqos.bind(*p_12_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_12_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_awvalid.bind(*p_12_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_awready.bind(*p_12_s01_axi_awready);
        p_12_s01_axi_awready->set_sv_netview_offsetfromdp(7471624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s01_axi_wdata.bind(*p_12_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s01_axi_wstrb.bind(*p_12_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_wlast.bind(*p_12_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_wvalid.bind(*p_12_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_wready.bind(*p_12_s01_axi_wready);
        p_12_s01_axi_wready->set_sv_netview_offsetfromdp(7471904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s01_axi_bid.bind(*p_12_s01_axi_bid);
        p_12_s01_axi_bid->set_sv_netview_offsetfromdp(7471960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s01_axi_bresp.bind(*p_12_s01_axi_bresp);
        p_12_s01_axi_bresp->set_sv_netview_offsetfromdp(7472016);
        xsim_sc_channel<0, bool > *p_12_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_bvalid.bind(*p_12_s01_axi_bvalid);
        p_12_s01_axi_bvalid->set_sv_netview_offsetfromdp(7472072);
        xsim_sc_channel<0, bool > *p_12_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_bready.bind(*p_12_s01_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s01_axi_arid.bind(*p_12_s01_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s01_axi_araddr.bind(*p_12_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s01_axi_arlen.bind(*p_12_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s01_axi_arsize.bind(*p_12_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s01_axi_arburst.bind(*p_12_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_arlock.bind(*p_12_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_arcache.bind(*p_12_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s01_axi_arprot.bind(*p_12_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_arregion.bind(*p_12_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s01_axi_arqos.bind(*p_12_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_12_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_arvalid.bind(*p_12_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_arready.bind(*p_12_s01_axi_arready);
        p_12_s01_axi_arready->set_sv_netview_offsetfromdp(7472800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s01_axi_rid.bind(*p_12_s01_axi_rid);
        p_12_s01_axi_rid->set_sv_netview_offsetfromdp(7472856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s01_axi_rdata.bind(*p_12_s01_axi_rdata);
        p_12_s01_axi_rdata->set_sv_netview_offsetfromdp(7472912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s01_axi_rresp.bind(*p_12_s01_axi_rresp);
        p_12_s01_axi_rresp->set_sv_netview_offsetfromdp(7472968);
        xsim_sc_channel<0, bool > *p_12_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_rlast.bind(*p_12_s01_axi_rlast);
        p_12_s01_axi_rlast->set_sv_netview_offsetfromdp(7473024);
        xsim_sc_channel<0, bool > *p_12_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_rvalid.bind(*p_12_s01_axi_rvalid);
        p_12_s01_axi_rvalid->set_sv_netview_offsetfromdp(7473080);
        xsim_sc_channel<0, bool > *p_12_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_rready.bind(*p_12_s01_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_aclk.bind(*p_12_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s01_axi_aresetn.bind(*p_12_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s02_axi_awid.bind(*p_12_s02_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s02_axi_awaddr.bind(*p_12_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s02_axi_awlen.bind(*p_12_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s02_axi_awsize.bind(*p_12_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s02_axi_awburst.bind(*p_12_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_awlock.bind(*p_12_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_awcache.bind(*p_12_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s02_axi_awprot.bind(*p_12_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_awregion.bind(*p_12_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_awqos.bind(*p_12_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_12_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_awvalid.bind(*p_12_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_awready.bind(*p_12_s02_axi_awready);
        p_12_s02_axi_awready->set_sv_netview_offsetfromdp(7473920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s02_axi_wdata.bind(*p_12_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s02_axi_wstrb.bind(*p_12_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_wlast.bind(*p_12_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_wvalid.bind(*p_12_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_wready.bind(*p_12_s02_axi_wready);
        p_12_s02_axi_wready->set_sv_netview_offsetfromdp(7474200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s02_axi_bid.bind(*p_12_s02_axi_bid);
        p_12_s02_axi_bid->set_sv_netview_offsetfromdp(7474256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s02_axi_bresp.bind(*p_12_s02_axi_bresp);
        p_12_s02_axi_bresp->set_sv_netview_offsetfromdp(7474312);
        xsim_sc_channel<0, bool > *p_12_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_bvalid.bind(*p_12_s02_axi_bvalid);
        p_12_s02_axi_bvalid->set_sv_netview_offsetfromdp(7474368);
        xsim_sc_channel<0, bool > *p_12_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_bready.bind(*p_12_s02_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s02_axi_arid.bind(*p_12_s02_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s02_axi_araddr.bind(*p_12_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s02_axi_arlen.bind(*p_12_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s02_axi_arsize.bind(*p_12_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s02_axi_arburst.bind(*p_12_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_arlock.bind(*p_12_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_arcache.bind(*p_12_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s02_axi_arprot.bind(*p_12_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_arregion.bind(*p_12_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s02_axi_arqos.bind(*p_12_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_12_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_arvalid.bind(*p_12_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_arready.bind(*p_12_s02_axi_arready);
        p_12_s02_axi_arready->set_sv_netview_offsetfromdp(7475096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s02_axi_rid.bind(*p_12_s02_axi_rid);
        p_12_s02_axi_rid->set_sv_netview_offsetfromdp(7475152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s02_axi_rdata.bind(*p_12_s02_axi_rdata);
        p_12_s02_axi_rdata->set_sv_netview_offsetfromdp(7475208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s02_axi_rresp.bind(*p_12_s02_axi_rresp);
        p_12_s02_axi_rresp->set_sv_netview_offsetfromdp(7475264);
        xsim_sc_channel<0, bool > *p_12_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_rlast.bind(*p_12_s02_axi_rlast);
        p_12_s02_axi_rlast->set_sv_netview_offsetfromdp(7475320);
        xsim_sc_channel<0, bool > *p_12_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_rvalid.bind(*p_12_s02_axi_rvalid);
        p_12_s02_axi_rvalid->set_sv_netview_offsetfromdp(7475376);
        xsim_sc_channel<0, bool > *p_12_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_rready.bind(*p_12_s02_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_aclk.bind(*p_12_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s02_axi_aresetn.bind(*p_12_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s04_axi_awid.bind(*p_12_s04_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s04_axi_awaddr.bind(*p_12_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s04_axi_awlen.bind(*p_12_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s04_axi_awsize.bind(*p_12_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s04_axi_awburst.bind(*p_12_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_awlock.bind(*p_12_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_awcache.bind(*p_12_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s04_axi_awprot.bind(*p_12_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_awregion.bind(*p_12_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_awqos.bind(*p_12_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_12_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_awvalid.bind(*p_12_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_awready.bind(*p_12_s04_axi_awready);
        p_12_s04_axi_awready->set_sv_netview_offsetfromdp(7476216);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s04_axi_wdata.bind(*p_12_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s04_axi_wstrb.bind(*p_12_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_wlast.bind(*p_12_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_12_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_wvalid.bind(*p_12_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_wready.bind(*p_12_s04_axi_wready);
        p_12_s04_axi_wready->set_sv_netview_offsetfromdp(7476496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s04_axi_bid.bind(*p_12_s04_axi_bid);
        p_12_s04_axi_bid->set_sv_netview_offsetfromdp(7476552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s04_axi_bresp.bind(*p_12_s04_axi_bresp);
        p_12_s04_axi_bresp->set_sv_netview_offsetfromdp(7476608);
        xsim_sc_channel<0, bool > *p_12_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_bvalid.bind(*p_12_s04_axi_bvalid);
        p_12_s04_axi_bvalid->set_sv_netview_offsetfromdp(7476664);
        xsim_sc_channel<0, bool > *p_12_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_bready.bind(*p_12_s04_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s04_axi_arid.bind(*p_12_s04_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->s04_axi_araddr.bind(*p_12_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s04_axi_arlen.bind(*p_12_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s04_axi_arsize.bind(*p_12_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s04_axi_arburst.bind(*p_12_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_arlock.bind(*p_12_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_arcache.bind(*p_12_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s04_axi_arprot.bind(*p_12_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_arregion.bind(*p_12_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s04_axi_arqos.bind(*p_12_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_12_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_arvalid.bind(*p_12_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_arready.bind(*p_12_s04_axi_arready);
        p_12_s04_axi_arready->set_sv_netview_offsetfromdp(7477392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s04_axi_rid.bind(*p_12_s04_axi_rid);
        p_12_s04_axi_rid->set_sv_netview_offsetfromdp(7477448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_12_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_12->s04_axi_rdata.bind(*p_12_s04_axi_rdata);
        p_12_s04_axi_rdata->set_sv_netview_offsetfromdp(7477504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s04_axi_rresp.bind(*p_12_s04_axi_rresp);
        p_12_s04_axi_rresp->set_sv_netview_offsetfromdp(7477560);
        xsim_sc_channel<0, bool > *p_12_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_rlast.bind(*p_12_s04_axi_rlast);
        p_12_s04_axi_rlast->set_sv_netview_offsetfromdp(7477616);
        xsim_sc_channel<0, bool > *p_12_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_rvalid.bind(*p_12_s04_axi_rvalid);
        p_12_s04_axi_rvalid->set_sv_netview_offsetfromdp(7477672);
        xsim_sc_channel<0, bool > *p_12_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_rready.bind(*p_12_s04_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_aclk.bind(*p_12_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s04_axi_aresetn.bind(*p_12_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s04_axi_aresetn);
        sc_inst_13 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_13->xsim_set_dbg_index(23);
        sc_inst_14 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_14->xsim_set_dbg_index(1541);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->saxi_lite_cq_awaddr.bind(*p_14_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->saxi_lite_cq_awprot.bind(*p_14_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_awvalid.bind(*p_14_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_awready.bind(*p_14_saxi_lite_cq_awready);
        p_14_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(9718944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->saxi_lite_cq_wdata.bind(*p_14_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->saxi_lite_cq_wstrb.bind(*p_14_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_wvalid.bind(*p_14_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_wready.bind(*p_14_saxi_lite_cq_wready);
        p_14_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(9719168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->saxi_lite_cq_bresp.bind(*p_14_saxi_lite_cq_bresp);
        p_14_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(9719224);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_bvalid.bind(*p_14_saxi_lite_cq_bvalid);
        p_14_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(9719280);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_bready.bind(*p_14_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->saxi_lite_cq_araddr.bind(*p_14_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->saxi_lite_cq_arprot.bind(*p_14_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_arvalid.bind(*p_14_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_arready.bind(*p_14_saxi_lite_cq_arready);
        p_14_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(9719560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->saxi_lite_cq_rdata.bind(*p_14_saxi_lite_cq_rdata);
        p_14_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(9719616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->saxi_lite_cq_rresp.bind(*p_14_saxi_lite_cq_rresp);
        p_14_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(9719672);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_rvalid.bind(*p_14_saxi_lite_cq_rvalid);
        p_14_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(9719728);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_rready.bind(*p_14_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_aclk.bind(*p_14_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_14_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->saxi_lite_cq_aresetn.bind(*p_14_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->maxi_lite_mb_awaddr.bind(*p_14_maxi_lite_mb_awaddr);
        p_14_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(9719952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->maxi_lite_mb_awprot.bind(*p_14_maxi_lite_mb_awprot);
        p_14_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(9720008);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_awvalid.bind(*p_14_maxi_lite_mb_awvalid);
        p_14_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(9720064);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_awready.bind(*p_14_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->maxi_lite_mb_wdata.bind(*p_14_maxi_lite_mb_wdata);
        p_14_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(9720176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->maxi_lite_mb_wstrb.bind(*p_14_maxi_lite_mb_wstrb);
        p_14_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(9720232);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_wvalid.bind(*p_14_maxi_lite_mb_wvalid);
        p_14_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(9720288);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_wready.bind(*p_14_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->maxi_lite_mb_bresp.bind(*p_14_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_bvalid.bind(*p_14_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_bready.bind(*p_14_maxi_lite_mb_bready);
        p_14_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(9720512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->maxi_lite_mb_araddr.bind(*p_14_maxi_lite_mb_araddr);
        p_14_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(9720568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->maxi_lite_mb_arprot.bind(*p_14_maxi_lite_mb_arprot);
        p_14_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(9720624);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_arvalid.bind(*p_14_maxi_lite_mb_arvalid);
        p_14_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(9720680);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_arready.bind(*p_14_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->maxi_lite_mb_rdata.bind(*p_14_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->maxi_lite_mb_rresp.bind(*p_14_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_rvalid.bind(*p_14_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_rready.bind(*p_14_maxi_lite_mb_rready);
        p_14_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(9720960);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_aclk.bind(*p_14_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_14_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->maxi_lite_mb_aresetn.bind(*p_14_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_14_irq = new xsim_sc_channel<0, bool >();
        sc_inst_14->irq.bind(*p_14_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_14_irq);
        sc_inst_15 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_15->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(9759928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(9760208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(9760264);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(9760320);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(9760992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(9761048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(9761104);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(9761160);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(9761216);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(9761440);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_15_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(9761496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(9761552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(9761608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(9761664);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(9761720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(9761776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(9761832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(9761888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(9761944);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(9762000);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(9762112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(9762168);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(9762224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(9762280);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(9762336);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(9762672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(9762728);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_15_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(9762784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(9762840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(9762896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(9762952);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(9763008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(9763064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(9763120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(9763176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(9763232);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(9763288);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(9763736);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m00_axi_aresetn);
        sc_inst_16 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_16->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s_axi_control_AWADDR.bind(*p_16_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_AWVALID.bind(*p_16_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_AWREADY.bind(*p_16_s_axi_control_AWREADY);
        p_16_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(9810240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_control_WDATA.bind(*p_16_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_control_WSTRB.bind(*p_16_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_WVALID.bind(*p_16_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_WREADY.bind(*p_16_s_axi_control_WREADY);
        p_16_s_axi_control_WREADY->set_sv_netview_offsetfromdp(9810464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_control_BRESP.bind(*p_16_s_axi_control_BRESP);
        p_16_s_axi_control_BRESP->set_sv_netview_offsetfromdp(9810520);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_BVALID.bind(*p_16_s_axi_control_BVALID);
        p_16_s_axi_control_BVALID->set_sv_netview_offsetfromdp(9810576);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_BREADY.bind(*p_16_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_16_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_16->s_axi_control_ARADDR.bind(*p_16_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_ARVALID.bind(*p_16_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_ARREADY.bind(*p_16_s_axi_control_ARREADY);
        p_16_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(9810800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_control_RDATA.bind(*p_16_s_axi_control_RDATA);
        p_16_s_axi_control_RDATA->set_sv_netview_offsetfromdp(9810856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_control_RRESP.bind(*p_16_s_axi_control_RRESP);
        p_16_s_axi_control_RRESP->set_sv_netview_offsetfromdp(9810912);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_RVALID.bind(*p_16_s_axi_control_RVALID);
        p_16_s_axi_control_RVALID->set_sv_netview_offsetfromdp(9810968);
        xsim_sc_channel<0, bool > *p_16_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_control_RREADY.bind(*p_16_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_16_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_clk.bind(*p_16_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_clk);
        xsim_sc_channel<0, bool > *p_16_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_16->ap_rst_n.bind(*p_16_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_16_ap_rst_n);
        xsim_sc_channel<0, bool > *p_16_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_16->interrupt.bind(*p_16_interrupt);
        p_16_interrupt->set_sv_netview_offsetfromdp(9811192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axi_gmem_AWADDR.bind(*p_16_m_axi_gmem_AWADDR);
        p_16_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(9811248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_gmem_AWLEN.bind(*p_16_m_axi_gmem_AWLEN);
        p_16_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(9811304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_gmem_AWSIZE.bind(*p_16_m_axi_gmem_AWSIZE);
        p_16_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(9811360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_gmem_AWBURST.bind(*p_16_m_axi_gmem_AWBURST);
        p_16_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(9811416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axi_gmem_AWLOCK.bind(*p_16_m_axi_gmem_AWLOCK);
        p_16_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(9811472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_AWREGION.bind(*p_16_m_axi_gmem_AWREGION);
        p_16_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(9811528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_AWCACHE.bind(*p_16_m_axi_gmem_AWCACHE);
        p_16_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(9811584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_gmem_AWPROT.bind(*p_16_m_axi_gmem_AWPROT);
        p_16_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(9811640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_AWQOS.bind(*p_16_m_axi_gmem_AWQOS);
        p_16_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(9811696);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_AWVALID.bind(*p_16_m_axi_gmem_AWVALID);
        p_16_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(9811752);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_AWREADY.bind(*p_16_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m_axi_gmem_WDATA.bind(*p_16_m_axi_gmem_WDATA);
        p_16_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(9811864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axi_gmem_WSTRB.bind(*p_16_m_axi_gmem_WSTRB);
        p_16_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(9811920);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_WLAST.bind(*p_16_m_axi_gmem_WLAST);
        p_16_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(9811976);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_WVALID.bind(*p_16_m_axi_gmem_WVALID);
        p_16_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(9812032);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_WREADY.bind(*p_16_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_gmem_BRESP.bind(*p_16_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_BVALID.bind(*p_16_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_BREADY.bind(*p_16_m_axi_gmem_BREADY);
        p_16_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(9812256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m_axi_gmem_ARADDR.bind(*p_16_m_axi_gmem_ARADDR);
        p_16_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(9812312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_gmem_ARLEN.bind(*p_16_m_axi_gmem_ARLEN);
        p_16_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(9812368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_gmem_ARSIZE.bind(*p_16_m_axi_gmem_ARSIZE);
        p_16_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(9812424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_gmem_ARBURST.bind(*p_16_m_axi_gmem_ARBURST);
        p_16_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(9812480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m_axi_gmem_ARLOCK.bind(*p_16_m_axi_gmem_ARLOCK);
        p_16_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(9812536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_ARREGION.bind(*p_16_m_axi_gmem_ARREGION);
        p_16_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(9812592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_ARCACHE.bind(*p_16_m_axi_gmem_ARCACHE);
        p_16_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(9812648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_gmem_ARPROT.bind(*p_16_m_axi_gmem_ARPROT);
        p_16_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(9812704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_gmem_ARQOS.bind(*p_16_m_axi_gmem_ARQOS);
        p_16_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(9812760);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_ARVALID.bind(*p_16_m_axi_gmem_ARVALID);
        p_16_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(9812816);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_ARREADY.bind(*p_16_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m_axi_gmem_RDATA.bind(*p_16_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_gmem_RRESP.bind(*p_16_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_RLAST.bind(*p_16_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_RVALID.bind(*p_16_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_16_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_gmem_RREADY.bind(*p_16_m_axi_gmem_RREADY);
        p_16_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(9813152);
        sc_inst_17 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_17->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_AWADDR.bind(*p_17_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWVALID.bind(*p_17_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWREADY.bind(*p_17_s_axi_control_AWREADY);
        p_17_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(9813368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_WDATA.bind(*p_17_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_control_WSTRB.bind(*p_17_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WVALID.bind(*p_17_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WREADY.bind(*p_17_s_axi_control_WREADY);
        p_17_s_axi_control_WREADY->set_sv_netview_offsetfromdp(9813592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_BRESP.bind(*p_17_s_axi_control_BRESP);
        p_17_s_axi_control_BRESP->set_sv_netview_offsetfromdp(9813648);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BVALID.bind(*p_17_s_axi_control_BVALID);
        p_17_s_axi_control_BVALID->set_sv_netview_offsetfromdp(9813704);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BREADY.bind(*p_17_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_ARADDR.bind(*p_17_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARVALID.bind(*p_17_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARREADY.bind(*p_17_s_axi_control_ARREADY);
        p_17_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(9813928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_RDATA.bind(*p_17_s_axi_control_RDATA);
        p_17_s_axi_control_RDATA->set_sv_netview_offsetfromdp(9813984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_RRESP.bind(*p_17_s_axi_control_RRESP);
        p_17_s_axi_control_RRESP->set_sv_netview_offsetfromdp(9814040);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RVALID.bind(*p_17_s_axi_control_RVALID);
        p_17_s_axi_control_RVALID->set_sv_netview_offsetfromdp(9814096);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RREADY.bind(*p_17_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_17_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_clk.bind(*p_17_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_ap_clk);
        xsim_sc_channel<0, bool > *p_17_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_rst_n.bind(*p_17_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_17_ap_rst_n);
        xsim_sc_channel<0, bool > *p_17_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_17->interrupt.bind(*p_17_interrupt);
        p_17_interrupt->set_sv_netview_offsetfromdp(9814320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_AWADDR.bind(*p_17_m_axi_gmem_AWADDR);
        p_17_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(9814376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_AWLEN.bind(*p_17_m_axi_gmem_AWLEN);
        p_17_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(9814432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWSIZE.bind(*p_17_m_axi_gmem_AWSIZE);
        p_17_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(9814488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_AWBURST.bind(*p_17_m_axi_gmem_AWBURST);
        p_17_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(9814544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_AWLOCK.bind(*p_17_m_axi_gmem_AWLOCK);
        p_17_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(9814600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWREGION.bind(*p_17_m_axi_gmem_AWREGION);
        p_17_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(9814656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWCACHE.bind(*p_17_m_axi_gmem_AWCACHE);
        p_17_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(9814712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWPROT.bind(*p_17_m_axi_gmem_AWPROT);
        p_17_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(9814768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWQOS.bind(*p_17_m_axi_gmem_AWQOS);
        p_17_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(9814824);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWVALID.bind(*p_17_m_axi_gmem_AWVALID);
        p_17_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(9814880);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWREADY.bind(*p_17_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_WDATA.bind(*p_17_m_axi_gmem_WDATA);
        p_17_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(9814992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_WSTRB.bind(*p_17_m_axi_gmem_WSTRB);
        p_17_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(9815048);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WLAST.bind(*p_17_m_axi_gmem_WLAST);
        p_17_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(9815104);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WVALID.bind(*p_17_m_axi_gmem_WVALID);
        p_17_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(9815160);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WREADY.bind(*p_17_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_BRESP.bind(*p_17_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BVALID.bind(*p_17_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BREADY.bind(*p_17_m_axi_gmem_BREADY);
        p_17_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(9815384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_ARADDR.bind(*p_17_m_axi_gmem_ARADDR);
        p_17_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(9815440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_ARLEN.bind(*p_17_m_axi_gmem_ARLEN);
        p_17_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(9815496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARSIZE.bind(*p_17_m_axi_gmem_ARSIZE);
        p_17_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(9815552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_ARBURST.bind(*p_17_m_axi_gmem_ARBURST);
        p_17_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(9815608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_ARLOCK.bind(*p_17_m_axi_gmem_ARLOCK);
        p_17_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(9815664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARREGION.bind(*p_17_m_axi_gmem_ARREGION);
        p_17_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(9815720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARCACHE.bind(*p_17_m_axi_gmem_ARCACHE);
        p_17_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(9815776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARPROT.bind(*p_17_m_axi_gmem_ARPROT);
        p_17_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(9815832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARQOS.bind(*p_17_m_axi_gmem_ARQOS);
        p_17_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(9815888);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARVALID.bind(*p_17_m_axi_gmem_ARVALID);
        p_17_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(9815944);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARREADY.bind(*p_17_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_RDATA.bind(*p_17_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_RRESP.bind(*p_17_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RLAST.bind(*p_17_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RVALID.bind(*p_17_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RREADY.bind(*p_17_m_axi_gmem_RREADY);
        p_17_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(9816280);
        sc_inst_18 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_18->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(9816496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(9816720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(9816776);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(9816832);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(9817056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(9817112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(9817168);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(9817224);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(9817448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(9817504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(9817560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(9817616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(9817672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(9817728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(9817784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(9817840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(9817896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(9817952);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(9818008);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(9818120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(9818176);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(9818232);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(9818288);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(9818512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(9818568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(9818624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(9818680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(9818736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(9818792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(9818848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(9818904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(9818960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(9819016);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(9819072);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(9819408);
        sc_inst_19 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_19->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(9819624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(9819848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(9819904);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(9819960);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(9820184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(9820240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(9820296);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(9820352);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(9820576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(9820632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(9820688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(9820744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(9820800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(9820856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(9820912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(9820968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(9821024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(9821080);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(9821136);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(9821248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(9821304);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(9821360);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(9821416);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(9821640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(9821696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(9821752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(9821808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(9821864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(9821920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(9821976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(9822032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(9822088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(9822144);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(9822200);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(9822536);
        sc_inst_20 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_20->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_20_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ui_clk.bind(*p_20_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_awid.bind(*p_20_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->c0_ddr_saxi_awaddr.bind(*p_20_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->c0_ddr_saxi_awlen.bind(*p_20_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->c0_ddr_saxi_awsize.bind(*p_20_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->c0_ddr_saxi_awburst.bind(*p_20_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_awlock.bind(*p_20_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_awcache.bind(*p_20_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->c0_ddr_saxi_awprot.bind(*p_20_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_awregion.bind(*p_20_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_awqos.bind(*p_20_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_awuser.bind(*p_20_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_awvalid.bind(*p_20_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_awready.bind(*p_20_c0_ddr_saxi_awready);
        p_20_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(9823368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->c0_ddr_saxi_wdata.bind(*p_20_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->c0_ddr_saxi_wstrb.bind(*p_20_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_wlast.bind(*p_20_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_wuser.bind(*p_20_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_wvalid.bind(*p_20_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_wready.bind(*p_20_c0_ddr_saxi_wready);
        p_20_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(9823704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_bid.bind(*p_20_c0_ddr_saxi_bid);
        p_20_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(9823760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->c0_ddr_saxi_bresp.bind(*p_20_c0_ddr_saxi_bresp);
        p_20_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(9823816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_buser.bind(*p_20_c0_ddr_saxi_buser);
        p_20_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(9823872);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_bvalid.bind(*p_20_c0_ddr_saxi_bvalid);
        p_20_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(9823928);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_bready.bind(*p_20_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_arid.bind(*p_20_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_20_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_20->c0_ddr_saxi_araddr.bind(*p_20_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->c0_ddr_saxi_arlen.bind(*p_20_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->c0_ddr_saxi_arsize.bind(*p_20_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->c0_ddr_saxi_arburst.bind(*p_20_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_arlock.bind(*p_20_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_arcache.bind(*p_20_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->c0_ddr_saxi_arprot.bind(*p_20_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_arregion.bind(*p_20_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->c0_ddr_saxi_arqos.bind(*p_20_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_aruser.bind(*p_20_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_arvalid.bind(*p_20_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_arready.bind(*p_20_c0_ddr_saxi_arready);
        p_20_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(9824712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_rid.bind(*p_20_c0_ddr_saxi_rid);
        p_20_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(9824768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->c0_ddr_saxi_rdata.bind(*p_20_c0_ddr_saxi_rdata);
        p_20_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(9824824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->c0_ddr_saxi_rresp.bind(*p_20_c0_ddr_saxi_rresp);
        p_20_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(9824880);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_rlast.bind(*p_20_c0_ddr_saxi_rlast);
        p_20_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(9824936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->c0_ddr_saxi_ruser.bind(*p_20_c0_ddr_saxi_ruser);
        p_20_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(9824992);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_rvalid.bind(*p_20_c0_ddr_saxi_rvalid);
        p_20_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(9825048);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_rready.bind(*p_20_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_aclk.bind(*p_20_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_20_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->c0_ddr_saxi_aresetn.bind(*p_20_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_20_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_20->s_xdma_axi_awid.bind(*p_20_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_awaddr.bind(*p_20_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_xdma_axi_awlen.bind(*p_20_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_xdma_axi_awsize.bind(*p_20_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_xdma_axi_awburst.bind(*p_20_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_awlock.bind(*p_20_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_awcache.bind(*p_20_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_xdma_axi_awprot.bind(*p_20_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_awregion.bind(*p_20_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_awqos.bind(*p_20_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_awuser.bind(*p_20_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_awvalid.bind(*p_20_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_awready.bind(*p_20_s_xdma_axi_awready);
        p_20_s_xdma_axi_awready->set_sv_netview_offsetfromdp(9825944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_wdata.bind(*p_20_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_wstrb.bind(*p_20_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_wlast.bind(*p_20_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s_xdma_axi_wuser.bind(*p_20_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_wvalid.bind(*p_20_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_wready.bind(*p_20_s_xdma_axi_wready);
        p_20_s_xdma_axi_wready->set_sv_netview_offsetfromdp(9826280);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_20_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_20->s_xdma_axi_bid.bind(*p_20_s_xdma_axi_bid);
        p_20_s_xdma_axi_bid->set_sv_netview_offsetfromdp(9826336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_xdma_axi_bresp.bind(*p_20_s_xdma_axi_bresp);
        p_20_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(9826392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s_xdma_axi_buser.bind(*p_20_s_xdma_axi_buser);
        p_20_s_xdma_axi_buser->set_sv_netview_offsetfromdp(9826448);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_bvalid.bind(*p_20_s_xdma_axi_bvalid);
        p_20_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(9826504);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_bready.bind(*p_20_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_20_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_20->s_xdma_axi_arid.bind(*p_20_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_araddr.bind(*p_20_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_xdma_axi_arlen.bind(*p_20_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_xdma_axi_arsize.bind(*p_20_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_xdma_axi_arburst.bind(*p_20_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_arlock.bind(*p_20_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_arcache.bind(*p_20_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_xdma_axi_arprot.bind(*p_20_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_arregion.bind(*p_20_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_xdma_axi_arqos.bind(*p_20_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_aruser.bind(*p_20_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_arvalid.bind(*p_20_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_arready.bind(*p_20_s_xdma_axi_arready);
        p_20_s_xdma_axi_arready->set_sv_netview_offsetfromdp(9827288);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_20_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_20->s_xdma_axi_rid.bind(*p_20_s_xdma_axi_rid);
        p_20_s_xdma_axi_rid->set_sv_netview_offsetfromdp(9827344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_xdma_axi_rdata.bind(*p_20_s_xdma_axi_rdata);
        p_20_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(9827400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_xdma_axi_rresp.bind(*p_20_s_xdma_axi_rresp);
        p_20_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(9827456);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_rlast.bind(*p_20_s_xdma_axi_rlast);
        p_20_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(9827512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->s_xdma_axi_ruser.bind(*p_20_s_xdma_axi_ruser);
        p_20_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(9827568);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_rvalid.bind(*p_20_s_xdma_axi_rvalid);
        p_20_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(9827624);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_rready.bind(*p_20_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_aclk.bind(*p_20_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_20_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_xdma_axi_aresetn.bind(*p_20_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_xdma_axi_aresetn);
        sc_inst_21 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_21->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_awid.bind(*p_21_m_aximm_awid);
        p_21_m_aximm_awid->set_sv_netview_offsetfromdp(9827896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_aximm_awaddr.bind(*p_21_m_aximm_awaddr);
        p_21_m_aximm_awaddr->set_sv_netview_offsetfromdp(9827952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_aximm_awlen.bind(*p_21_m_aximm_awlen);
        p_21_m_aximm_awlen->set_sv_netview_offsetfromdp(9828008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_aximm_awsize.bind(*p_21_m_aximm_awsize);
        p_21_m_aximm_awsize->set_sv_netview_offsetfromdp(9828064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_aximm_awburst.bind(*p_21_m_aximm_awburst);
        p_21_m_aximm_awburst->set_sv_netview_offsetfromdp(9828120);
        xsim_sc_channel<0, bool > *p_21_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_awlock.bind(*p_21_m_aximm_awlock);
        p_21_m_aximm_awlock->set_sv_netview_offsetfromdp(9828176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_aximm_awcache.bind(*p_21_m_aximm_awcache);
        p_21_m_aximm_awcache->set_sv_netview_offsetfromdp(9828232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_aximm_awprot.bind(*p_21_m_aximm_awprot);
        p_21_m_aximm_awprot->set_sv_netview_offsetfromdp(9828288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_aximm_awqos.bind(*p_21_m_aximm_awqos);
        p_21_m_aximm_awqos->set_sv_netview_offsetfromdp(9828344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_aximm_awuser.bind(*p_21_m_aximm_awuser);
        p_21_m_aximm_awuser->set_sv_netview_offsetfromdp(9828400);
        xsim_sc_channel<0, bool > *p_21_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_awvalid.bind(*p_21_m_aximm_awvalid);
        p_21_m_aximm_awvalid->set_sv_netview_offsetfromdp(9828456);
        xsim_sc_channel<0, bool > *p_21_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_awready.bind(*p_21_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_aximm_wdata.bind(*p_21_m_aximm_wdata);
        p_21_m_aximm_wdata->set_sv_netview_offsetfromdp(9828568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_aximm_wstrb.bind(*p_21_m_aximm_wstrb);
        p_21_m_aximm_wstrb->set_sv_netview_offsetfromdp(9828624);
        xsim_sc_channel<0, bool > *p_21_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_wlast.bind(*p_21_m_aximm_wlast);
        p_21_m_aximm_wlast->set_sv_netview_offsetfromdp(9828680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_wuser.bind(*p_21_m_aximm_wuser);
        p_21_m_aximm_wuser->set_sv_netview_offsetfromdp(9828736);
        xsim_sc_channel<0, bool > *p_21_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_wvalid.bind(*p_21_m_aximm_wvalid);
        p_21_m_aximm_wvalid->set_sv_netview_offsetfromdp(9828792);
        xsim_sc_channel<0, bool > *p_21_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_wready.bind(*p_21_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_bid.bind(*p_21_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_aximm_bresp.bind(*p_21_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_buser.bind(*p_21_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_21_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_bvalid.bind(*p_21_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_bready.bind(*p_21_m_aximm_bready);
        p_21_m_aximm_bready->set_sv_netview_offsetfromdp(9829128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_arid.bind(*p_21_m_aximm_arid);
        p_21_m_aximm_arid->set_sv_netview_offsetfromdp(9829184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_aximm_araddr.bind(*p_21_m_aximm_araddr);
        p_21_m_aximm_araddr->set_sv_netview_offsetfromdp(9829240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_aximm_arlen.bind(*p_21_m_aximm_arlen);
        p_21_m_aximm_arlen->set_sv_netview_offsetfromdp(9829296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_aximm_arsize.bind(*p_21_m_aximm_arsize);
        p_21_m_aximm_arsize->set_sv_netview_offsetfromdp(9829352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_aximm_arburst.bind(*p_21_m_aximm_arburst);
        p_21_m_aximm_arburst->set_sv_netview_offsetfromdp(9829408);
        xsim_sc_channel<0, bool > *p_21_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_arlock.bind(*p_21_m_aximm_arlock);
        p_21_m_aximm_arlock->set_sv_netview_offsetfromdp(9829464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_aximm_arcache.bind(*p_21_m_aximm_arcache);
        p_21_m_aximm_arcache->set_sv_netview_offsetfromdp(9829520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_aximm_arprot.bind(*p_21_m_aximm_arprot);
        p_21_m_aximm_arprot->set_sv_netview_offsetfromdp(9829576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_aximm_arqos.bind(*p_21_m_aximm_arqos);
        p_21_m_aximm_arqos->set_sv_netview_offsetfromdp(9829632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_aximm_aruser.bind(*p_21_m_aximm_aruser);
        p_21_m_aximm_aruser->set_sv_netview_offsetfromdp(9829688);
        xsim_sc_channel<0, bool > *p_21_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_arvalid.bind(*p_21_m_aximm_arvalid);
        p_21_m_aximm_arvalid->set_sv_netview_offsetfromdp(9829744);
        xsim_sc_channel<0, bool > *p_21_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_arready.bind(*p_21_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_rid.bind(*p_21_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_aximm_rdata.bind(*p_21_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_aximm_rresp.bind(*p_21_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_21_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_rlast.bind(*p_21_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_aximm_ruser.bind(*p_21_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_21_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_rvalid.bind(*p_21_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_rready.bind(*p_21_m_aximm_rready);
        p_21_m_aximm_rready->set_sv_netview_offsetfromdp(9830192);
        xsim_sc_channel<0, bool > *p_21_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_aclk.bind(*p_21_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_21_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_aximm_aresetn.bind(*p_21_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axictrl_awaddr.bind(*p_21_m_axictrl_awaddr);
        p_21_m_axictrl_awaddr->set_sv_netview_offsetfromdp(9830360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axictrl_awprot.bind(*p_21_m_axictrl_awprot);
        p_21_m_axictrl_awprot->set_sv_netview_offsetfromdp(9830416);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_awvalid.bind(*p_21_m_axictrl_awvalid);
        p_21_m_axictrl_awvalid->set_sv_netview_offsetfromdp(9830472);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_awready.bind(*p_21_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axictrl_wdata.bind(*p_21_m_axictrl_wdata);
        p_21_m_axictrl_wdata->set_sv_netview_offsetfromdp(9830584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axictrl_wstrb.bind(*p_21_m_axictrl_wstrb);
        p_21_m_axictrl_wstrb->set_sv_netview_offsetfromdp(9830640);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_wvalid.bind(*p_21_m_axictrl_wvalid);
        p_21_m_axictrl_wvalid->set_sv_netview_offsetfromdp(9830696);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_wready.bind(*p_21_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axictrl_bresp.bind(*p_21_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_bvalid.bind(*p_21_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_bready.bind(*p_21_m_axictrl_bready);
        p_21_m_axictrl_bready->set_sv_netview_offsetfromdp(9830920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axictrl_araddr.bind(*p_21_m_axictrl_araddr);
        p_21_m_axictrl_araddr->set_sv_netview_offsetfromdp(9830976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axictrl_arprot.bind(*p_21_m_axictrl_arprot);
        p_21_m_axictrl_arprot->set_sv_netview_offsetfromdp(9831032);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_arvalid.bind(*p_21_m_axictrl_arvalid);
        p_21_m_axictrl_arvalid->set_sv_netview_offsetfromdp(9831088);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_arready.bind(*p_21_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axictrl_rdata.bind(*p_21_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axictrl_rresp.bind(*p_21_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_rvalid.bind(*p_21_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_rready.bind(*p_21_m_axictrl_rready);
        p_21_m_axictrl_rready->set_sv_netview_offsetfromdp(9831368);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_aclk.bind(*p_21_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_21_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axictrl_aresetn.bind(*p_21_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
    }
